openapi: 3.0.3
info:
  title: net2phone API
  description: net2phone's public API.
  version: internal
  x-internalVersion: spec-0.8.0
  license:
    name: MIT
    url: 'https://spdx.org/licenses/MIT'
  termsOfService: 'https://app.net2phone.com/settings/termsandpolicies'
servers:
  - url: 'https://api-dev.qa.n2p.io/v2'
    description: net2phone Development API Server.
  - url: 'https://api-qa.qa.n2p.io/v2'
    description: net2phone QA API Server.
  - url: 'https://api-uat.prod.n2p.io/v2'
    description: net2phone UAT API Server.
  - url: 'https://api-prod.prod.n2p.io/v2'
    description: net2phone Production API Server.
security:
  - n2pOpenIdConnect: []
tags:
  - name: WebhookSubscription
    description: 'Subscribe to call, voicemail, message events.'
  - name: User
    description: Manage team members and their access level.
  - name: Conversation
    description: 'Manage conversations, send messages, receive events.'
paths:
  '/users:batch-get':
    get:
      x-n2p-internal: true
      operationId: BatchGetUsers
      description: >-
        List users batch matching the input user ids. This will return a
        successful response even if the result collection is empty, or if some
        user with ids provided are not found.
      tags:
        - User
      parameters:
        - in: query
          name: ids
          required: true
          schema:
            type: array
            maxItems: 100
            items:
              $ref: '#/components/schemas/string-id'
          description: The list of numeric ids of users.
      responses:
        '200':
          description: >-
            Collection of users matching the input ids, exclusing those that
            were not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/collection-of-user'
        '401':
          $ref: '#/components/responses/authentication-error'
        '422':
          $ref: '#/components/responses/invalid-request-error'
      summary: Batch get users
      x-n2p-accountBackendTypes:
        - unite
  /webhook-event-types:
    get:
      operationId: ListWebhookEventTypes
      description: List all supported event types based the account type you belong to.
      x-n2p-accountBackendTypes:
        - unite
        - 4psa
        - netsapiens
      tags:
        - WebhookSubscription
      responses:
        '200':
          description: Collection of webhook event types.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/collection-of-webhook-event-type'
              examples:
                Default:
                  summary: >-
                    List of supported webhook event types depending on account
                    type.
                  x-n2p-accountBackendTypes:
                    - unite
                    - 4psa
                    - netsapiens
                  value:
                    items:
                      - id: call_ringing
                        display_name: Call Ringing
        '401':
          $ref: '#/components/responses/authentication-error'
        '422':
          $ref: '#/components/responses/not-supported-error'
      summary: List webhook event types
  /webhook-subscriptions:
    get:
      operationId: ListWebhookSubscription
      description: >-
        Lists all webhook subscriptions accessible to the current user. `Admin`
        users will get both `Account` and `User` subscriptions. `Regular` users
        get their own webhook subscriptions only.

        .
      tags:
        - WebhookSubscription
      parameters:
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/before'
        - $ref: '#/components/parameters/after'
      responses:
        '200':
          description: Page of webhook subscriptions.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/cursor-page-of-webhook-subscription'
        '400':
          $ref: '#/components/responses/bad-request-error'
        '401':
          $ref: '#/components/responses/authentication-error'
        '422':
          $ref: '#/components/responses/invalid-request-error'
      summary: List webhook subscription
      x-n2p-accountBackendTypes:
        - unite
    post:
      operationId: CreateWebhookSubscription
      description: >-
        Creates a webhook subscription to receive callbacks on `endpoint_url`
        for the event types subscribed to.
      x-n2p-accountBackendTypes:
        - unite
        - netsapiens
        - 4psa
      tags:
        - WebhookSubscription
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/create-webhook-subscription-command'
            examples:
              Unite:
                $ref: '#/components/examples/unite-webhook-subscription-request'
              4PSA:
                $ref: '#/components/examples/4psa-webhook-subscription-request'
              NetSapiens:
                $ref: '#/components/examples/netsapiens-webhook-subscription-request'
      responses:
        '201':
          description: Webhook subscription was succesfully created.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/webhook-subscription'
              examples:
                Unite:
                  $ref: '#/components/examples/unite-webhook-subscription-response'
                NetSapiens:
                  $ref: >-
                    #/components/examples/netsapiens-webhook-subscription-response
                4psa:
                  $ref: '#/components/examples/4psa-webhook-subscription-response'
        '400':
          $ref: '#/components/responses/bad-request-error'
        '401':
          $ref: '#/components/responses/authentication-error'
        '403':
          $ref: '#/components/responses/forbidden-error'
        '404':
          $ref: '#/components/responses/not-found-error'
        '422':
          $ref: '#/components/responses/invalid-request-error'
      callbacks:
        MessageReceived:
          $ref: '#/components/callbacks/message-received'
      summary: Create webhook subscription
  '/webhook-subscriptions/{webhook_subscription_id}':
    get:
      operationId: GetWebhookSubscription
      description: >-
        Get details of specified webhook subscription if you are an `admin` of
        this account or `owner` of that subscription.
      x-n2p-accountBackendTypes:
        - unite
        - netsapiens
        - 4psa
      tags:
        - WebhookSubscription
      parameters:
        - $ref: '#/components/parameters/webhook-subscription-id'
      responses:
        '200':
          description: Webhook subscription object.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/webhook-subscription'
              examples:
                Unite:
                  $ref: '#/components/examples/unite-webhook-subscription-response'
                NetSapiens:
                  $ref: >-
                    #/components/examples/netsapiens-webhook-subscription-response
                4PSA:
                  $ref: '#/components/examples/4psa-webhook-subscription-response'
        '401':
          $ref: '#/components/responses/authentication-error'
        '404':
          $ref: '#/components/responses/not-found-error'
        '422':
          $ref: '#/components/responses/not-supported-error'
      summary: Get webhook subscription
    put:
      operationId: UpdateWebhookSubscription
      description: >-
        Update the details of specified subscription if you are an `admin` of
        this account or `owner` of that subscription.
      x-n2p-accountBackendTypes:
        - unite
        - netsapiens
        - 4psa
      tags:
        - WebhookSubscription
      parameters:
        - $ref: '#/components/parameters/webhook-subscription-id'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/update-webhook-subscription-command'
            examples:
              Unite:
                $ref: '#/components/examples/unite-webhook-subscription-request'
              4PSA:
                $ref: '#/components/examples/4psa-webhook-subscription-request'
              NetSapiens:
                $ref: '#/components/examples/netsapiens-webhook-subscription-request'
      responses:
        '200':
          description: Updated webhook subscription object.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/webhook-subscription'
              examples:
                Unite:
                  $ref: '#/components/examples/unite-webhook-subscription-response'
                NetSapiens:
                  $ref: >-
                    #/components/examples/netsapiens-webhook-subscription-response
                4PSA:
                  $ref: '#/components/examples/4psa-webhook-subscription-response'
        '400':
          $ref: '#/components/responses/bad-request-error'
        '401':
          $ref: '#/components/responses/authentication-error'
        '403':
          $ref: '#/components/responses/forbidden-error'
        '404':
          $ref: '#/components/responses/not-found-error'
        '422':
          $ref: '#/components/responses/invalid-request-error'
      callbacks:
        MessageReceived:
          $ref: '#/components/callbacks/message-received'
      summary: Update webhook subscription
    delete:
      operationId: DeleteWebhookSubscription
      description: >-
        Delete specified webhook subscription if you are an `admin` of this
        account or `owner` of that subscription.
      x-n2p-accountBackendTypes:
        - unite
        - netsapiens
        - 4psa
      parameters:
        - $ref: '#/components/parameters/webhook-subscription-id'
      tags:
        - WebhookSubscription
      responses:
        '204':
          description: The webhook subscription was deleted successfully.
        '401':
          $ref: '#/components/responses/authentication-error'
        '404':
          $ref: '#/components/responses/not-found-error'
        '422':
          $ref: '#/components/responses/not-supported-error'
      summary: Delete webhook subscription
  '/webhook-subscriptions/{webhook_subscription_id}/secret':
    put:
      operationId: RegenerateWebhookSubscriptionSecret
      description: >-
        Regenerate the secret of specified webhook subscription if you are an
        `admin` of this account or `owner` of this subscription.
      tags:
        - WebhookSubscription
      parameters:
        - $ref: '#/components/parameters/webhook-subscription-id'
      responses:
        '200':
          description: Webhook subscription secret was regenerated successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/webhook-subscription-secret'
        '401':
          $ref: '#/components/responses/authentication-error'
        '404':
          $ref: '#/components/responses/not-found-error'
        '422':
          $ref: '#/components/responses/not-supported-error'
      summary: Regenerate webhook subscription secret
      x-n2p-accountBackendTypes:
        - unite
  /conversations:
    get:
      operationId: ListConversations
      description: >-
        Returns the paginated list of all conversations that are accessible to
        the user making the request.
      tags:
        - Conversation
      parameters:
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/before'
        - $ref: '#/components/parameters/after'
      responses:
        '200':
          description: Page of conversations.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/cursor-page-of-conversation'
        '401':
          $ref: '#/components/responses/authentication-error'
        '422':
          $ref: '#/components/responses/invalid-request-error'
      summary: List conversations
      x-n2p-accountBackendTypes:
        - unite
  /conversations/@new/messages:
    post:
      operationId: CreateConversationFromMessage
      description: Create a new conversation with your first message.
      tags:
        - Conversation
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/create-conversation-from-message-command'
      responses:
        '200':
          description: >-
            The `MessageConversationEvent` that was posted to a newly created
            conversation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/message-conversation-event'
        '401':
          $ref: '#/components/responses/authentication-error'
        '403':
          $ref: '#/components/responses/forbidden-error'
        '404':
          $ref: '#/components/responses/not-found-error'
        '422':
          $ref: '#/components/responses/invalid-request-error'
      summary: Create conversation from message
      x-n2p-accountBackendTypes:
        - unite
  '/conversations/{conversation_id}/events/{event_id}':
    get:
      operationId: GetConversationEvent
      description: Get specified conversation event.
      tags:
        - Conversation
      parameters:
        - $ref: '#/components/parameters/conversation-id'
        - $ref: '#/components/parameters/event-id'
      responses:
        '200':
          description: Specific event from the conversation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/message-conversation-event'
        '401':
          $ref: '#/components/responses/authentication-error'
        '404':
          $ref: '#/components/responses/not-found-error'
        '422':
          $ref: '#/components/responses/invalid-request-error'
      summary: Get conversation event
      x-n2p-accountBackendTypes:
        - unite
  '/conversations/{conversation_id}/messages':
    post:
      operationId: CreateMessageInConversation
      description: Create a message in an existing conversation.
      tags:
        - Conversation
      parameters:
        - $ref: '#/components/parameters/conversation-id'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/create-message-command'
      responses:
        '200':
          description: >-
            The message was sent successfully. Returns back the
            `MessageConversationEvent` object.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/message-conversation-event'
        '401':
          $ref: '#/components/responses/authentication-error'
        '403':
          $ref: '#/components/responses/forbidden-error'
        '404':
          $ref: '#/components/responses/not-found-error'
        '422':
          $ref: '#/components/responses/invalid-request-error'
      summary: Create message in conversation
      x-n2p-accountBackendTypes:
        - unite
  '/conversations/{conversation_id}/events':
    get:
      operationId: ListConversationEvents
      description: Lists events of specified conversation.
      tags:
        - Conversation
      parameters:
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/before'
        - $ref: '#/components/parameters/after'
        - $ref: '#/components/parameters/conversation-id'
      responses:
        '200':
          description: Page of conversation events.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/cursor-page-of-conversation-event'
        '401':
          $ref: '#/components/responses/authentication-error'
        '404':
          $ref: '#/components/responses/not-found-error'
        '422':
          $ref: '#/components/responses/invalid-request-error'
      summary: List conversation events
      x-n2p-accountBackendTypes:
        - unite
components:
  securitySchemes:
    n2pOpenIdConnect:
      type: openIdConnect
      openIdConnectUrl: 'https://auth.net2phone.com/.well-known/openid-configuration'
  schemas:
    string-id:
      type: string
      description: Unique identifier of the resource (entity) within an account.
      example: 6gtkcdsr
      minLength: 1
      x-n2p-comment: >
        Each node kind (Unite, 4PSA, NetSapiens, etc...) can interpret the
        identifier in it's own way.

        For example, this is one recommended way to encode integer identifiers
        using Crockford's Base32 encoding:

        1. Convert integer to bytes using explicit endianness (big vs little
        endian). Make sure this is machine independent.

        2. Base32 encode the bytes and add a checksum character
        (https://www.crockford.com/base32.html).
      title: StringId
    avatar-image-kind:
      type: string
      description: Describes if the avatar image is original uploaded or resized.
      enum:
        - original
        - resized
      title: AvatarImageKind
    avatar-image:
      type: object
      required:
        - url
        - kind
      properties:
        url:
          type: string
          example: >-
            https://n2p-messaging-prod-storage.s3.us-east-1.amazonaws.com/6082ce5e436acf00018faf27-1619430611421-200px.jpg
        size_pixels:
          type: integer
          format: int32
          nullable: true
          description: >-
            The size of the image in pixels (for a resized image). Both width
            and height will be same for a resized image. It only holds value if
            the avatar image is resized.
          example: 400
        kind:
          $ref: '#/components/schemas/avatar-image-kind'
      title: AvatarImage
    avatar:
      type: object
      description: >-
        Avatar is available only for `unite` accounts. It's always null for
        `4PSA` and `netsapiens` accounts.
      nullable: true
      properties:
        user_id:
          $ref: '#/components/schemas/string-id'
        avatar_images:
          type: array
          items:
            $ref: '#/components/schemas/avatar-image'
      title: Avatar
    role-id:
      type: string
      example: Admin
      description: >-
        The unique identifier of the role. Possible values depend on "node
        kind":

        - **Unite** - `Regular`, `Admin`

        - **4PSA** - `member`, `administrator`, `owner`

        - **netsapiens** - `Basic User`, `Office Manager`, `Call Center Agent`,
        `Call Center Supervisor`, `No Portal`

        .
      title: RoleId
    role:
      type: object
      nullable: true
      required:
        - id
        - display_name
      properties:
        id:
          $ref: '#/components/schemas/role-id'
        display_name:
          type: string
      example:
        id: Regular
        display_name: Regular User
      title: Role
    user:
      type: object
      nullable: true
      required:
        - id
      properties:
        id:
          $ref: '#/components/schemas/string-id'
        first_name:
          type: string
          example: John
        last_name:
          type: string
          example: Doe
        email:
          type: string
          format: email
          example: john.doe@example.com
        avatar:
          $ref: '#/components/schemas/avatar'
        role:
          allOf:
            - $ref: '#/components/schemas/role'
            - x-n2p-comment: Roles are not available for RingSouth users.
      title: User
    collection-of-user:
      type: object
      required:
        - items
      properties:
        items:
          type: array
          items:
            allOf:
              - $ref: '#/components/schemas/user'
              - type: object
                nullable: false
      title: CollectionOfUser
    error:
      type: object
      description: The base type for all errors.
      required:
        - type
        - message
        - status_code
        - trace_id
      discriminator:
        propertyName: type
        mapping:
          BadRequestError: '#/components/schemas/bad-request-error'
          ValidationError: '#/components/schemas/validation-error'
          ForbiddenError: '#/components/schemas/forbidden-error'
          NotFoundError: '#/components/schemas/not-found-error'
          AuthenticationError: '#/components/schemas/authentication-error'
          NotSupportedError: '#/components/schemas/not-supported-error'
      properties:
        type:
          type: string
          description: >-
            A discriminator field that uniquely identifies the problem type.
            Please note, that 2 responses with the same HTTP status code can
            contain errors of different type.

            .
          nullable: false
        message:
          type: string
          description: A human-readable explanation of the problem in US English.
          nullable: false
        status_code:
          type: integer
          description: >-
            The same status code as in the HTTP response. Don't use this to
            determine the error type, use the "type" field instead.

            .
          nullable: false
          format: int32
          minimum: 400
          maximum: 599
        trace_id:
          type: string
          description: >-
            Tracing identifier of the request. Including this in support
            requests will help to narrow down the issue.
          nullable: false
          example: 00-a52d4f52df80574c92bcdedb9abba5b0-7f70c12f16a7c44d-00
      title: Error
    bad-request-error:
      allOf:
        - $ref: '#/components/schemas/error'
      example:
        type: BadRequestError
        message: Failed to parse JSON content from the request body.
        status: 400
        traceId: 00-a52d4f52df80574c92bcdedb9abba5b0-7f70c12f16a7c44d-00
      title: BadRequestError
    validation-error-code:
      type: string
      description: Machine-readable validation error code.
      nullable: true
      enum:
        - required
        - range
        - length
        - regular_expression
        - email
        - phone_number
        - null
      title: ValidationErrorCode
    validation-error-detail:
      type: object
      required:
        - message
      properties:
        field:
          type: string
          description: >-
            The optional name/path of the invalid field. The field can come as a
            path, query, header or body parameter.

            .
          nullable: true
        message:
          type: string
          description: Human readable explanation of the error in US English.
          nullable: false
        code:
          $ref: '#/components/schemas/validation-error-code'
      title: ValidationErrorDetail
    validation-error:
      allOf:
        - $ref: '#/components/schemas/error'
        - type: object
          required:
            - details
          properties:
            details:
              type: array
              description: List of validation details.
              nullable: false
              items:
                $ref: '#/components/schemas/validation-error-detail'
      example:
        type: ValidationError
        message: The provided request contains invalid data.
        status: 422
        trace_id: 00-a52d4f52df80574c92bcdedb9abba5b0-7f70c12f16a7c44d-00
        details:
          - message: Something was wrong with the object provided.
          - message: '''First Name'' must not be empty.'
            code: Required
            field: first_name
      title: ValidationError
    forbidden-error:
      allOf:
        - $ref: '#/components/schemas/error'
      example:
        type: ForbiddenError
        message: The operation is blocked due to insufficient access rights.
        status: 403
        traceId: 00-a52d4f52df80574c92bcdedb9abba5b0-7f70c12f16a7c44d-00
      title: ForbiddenError
    not-found-error:
      allOf:
        - $ref: '#/components/schemas/error'
      example:
        type: NotFoundError
        message: The user with id '25' was not found.
        status: 404
        traceId: 00-a52d4f52df80574c92bcdedb9abba5b0-7f70c12f16a7c44d-00
      title: NotFoundError
    authentication-error:
      allOf:
        - $ref: '#/components/schemas/error'
      example:
        type: AuthenticationError
        message: The operation requires authentication but token is missing.
        status: 401
        traceId: 00-a52d4f52df80574c92bcdedb9abba5b0-7f70c12f16a7c44d-00
      title: AuthenticationError
    not-supported-error:
      allOf:
        - $ref: '#/components/schemas/error'
      example:
        type: NotSupportedError
        message: >-
          The attempted operation is not supported with the current net2phone
          account type.
        status: 422
        traceId: 00-a52d4f52df80574c92bcdedb9abba5b0-7f70c12f16a7c44d-00
      title: NotSupportedError
    invalid-request-error:
      discriminator:
        propertyName: type
        mapping:
          ValidationError: '#/components/schemas/validation-error'
          NotSupportedError: '#/components/schemas/not-supported-error'
      anyOf:
        - $ref: '#/components/schemas/validation-error'
        - $ref: '#/components/schemas/not-supported-error'
      title: InvalidRequestError
    webhook-event-type-id:
      type: string
      enum:
        - call_ringing
        - emergency_call
        - call_answered
        - call_pickup
        - call_completed
        - c_2_c_call
        - call_missed
        - call_blocked
        - call_busy
        - call_park
        - call_unpark
        - call_hold
        - call_resume
        - call_forward
        - call_blind_transfer
        - call_consultative_transfer
        - call_recorded
        - call_recording_failed
        - call_rg_queue_entered
        - call_rg_tier_ringing
        - call_rg_queue_complete
        - voice_mail_received
        - voice_mail_notify
        - voice_mail_missed
        - message_received
        - call_started
      x-n2p-enum:
        name: WebhookEventType
        modelAsString: false
        values:
          - value: call_ringing
            description: >-
              This event is triggered when a call is ringing. This event will
              trigger for both inbound and outbound calls and is typically
              followed by by a `CallAnswered` or `CallMissed` event.
            name: Call Ringing
          - value: emergency_call
            description: >-
              This event is triggered when a call is placed to an emergency
              serivce.
            name: Emergency Call Placed
          - value: call_answered
            description: >-
              This event is triggered when a Team Member answers an incoming
              call or when an outgoing call is answered by the dialed
              destination number.
            name: Call Answered
          - value: call_pickup
            description: >-
              This notification is triggered when a Team Member uses the Pick Up
              feature (*21) to answer a call ringing on another Team Members
              extension.
            name: Call Pickup
          - value: call_completed
            description: >-
              Event is triggered when a call is successfully completed. This
              event will trigger for both inbound and outbound calls.
            name: Call Completed
          - value: c_2_c_call
            description: Provides a summary of a call triggered by the click-to-call flow.
            name: Click-To-Call Result
          - value: call_missed
            description: >-
              This event is triggered when an incoming call isnâ€™t answered by
              any phone in your net2phone account.
            name: Call Missed
          - value: call_blocked
            description: This event is triggered when an incoming call is blocked.
            name: Call Blocked
          - value: call_busy
            description: >-
              The event is triggered when an outbound call receives a 4xx or 5xx
              error response to the INVITE indicating the call failed for some
              reason.
            name: Call Busy
          - value: call_park
            description: This event is triggered when a Team Member parks a call.
            name: Call Park
          - value: call_unpark
            description: >-
              This event is triggered when a Team Member unparks a call. NOTE
              The team member that unparks a call will also get a `CallAnswered`
              event.
            name: Call Unpark
          - value: call_hold
            description: This event is triggered when a Team Member puts a call on hold.
            name: Call Hold
          - value: call_resume
            description: This event is triggered when a Team Member resumes a call.
            name: Call Resume
          - value: call_forward
            description: This event is triggered when a Team Member forwards a call.
            name: Call Forward
          - value: call_blind_transfer
            description: >-
              This event is issued when a Team Member transfers a call via blind
              (cold) transfer.
            name: Call Blind Transfer
          - value: call_consultative_transfer
            description: >-
              This event is issued when a Team Member transfers a call via
              consultative (warm) transfer.
            name: Call Consultative Transfer
          - value: call_recorded
            description: >-
              This event is triggered when an inbound or outbound call has been
              successfully recorded.
            name: Call Recorded
          - value: call_recording_failed
            description: This event is triggered when a call fails to record.
            name: Call Recording Failed
          - value: call_rg_queue_entered
            description: >-
              The event is issued when a call enters a Ring Group with call
              queue enabled.
            name: Call Ring Group Queue Entered
          - value: call_rg_tier_ringing
            description: >-
              The event is issued when a call waiting in a Ring Group with call
              queue enabled enters a Tier which results in calls being sent to
              Team Member in that Tier.
            name: Call Ring Group Tier Ringing
          - value: call_rg_queue_complete
            description: >-
              The event is issued when a call in a Ring Group completes by
              either being answered in a Tier or the caller hangs up.
            name: Call Ring Group Queue Complete
          - value: voice_mail_received
            description: >-
              A voicemail was left for a net2phone user. This event will trigger
              when an incoming (only) call is not answered by any phone in your
              net2phone account and a voicemail is recorded.
            name: Voicemail Received
          - value: voice_mail_notify
            description: >-
              This event is triggered when an incoming call is sent to a Team
              Memberâ€™s voicemail but the caller doesnâ€™t leave a voicemail. A
              common scenario for this would be the case where the callers hangs
              up before leaving a voicemail.
            name: Voicemail Notify
          - value: voice_mail_missed
            description: >-
              This event is triggered when an incoming call is sent to a Team
              Memberâ€™s voicemail but the caller doesnâ€™t leave a voicemail. A
              common scenario for this would be the case where the callers hangs
              up before leaving a voicemail.
            name: Voicemail Missed
          - value: message_received
            name: Message Received
            x-n2p-node-kinds:
              - unite
          - value: call_started
            description: >-
              This event is triggered for all calls
              (answered/unanswered/rejected etc).
            name: Call Started
      title: WebhookEventTypeId
    webhook-event-type:
      type: object
      required:
        - id
        - display_name
      properties:
        id:
          $ref: '#/components/schemas/webhook-event-type-id'
        display_name:
          type: string
      example:
        id: call_ringing
        displayName: Call Ringing
      title: WebhookEventType
    collection-of-webhook-event-type:
      type: object
      required:
        - items
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/webhook-event-type'
      title: CollectionOfWebhookEventType
    cursor-page:
      type: object
      required:
        - has_after
        - has_before
      properties:
        after:
          type: string
          nullable: true
          description: >-
            The opaque cursor pointing to the last record of the page. Set to
            `null` if the resulting collection is empty.
          example: eyJrIjoiRkM5RDhDQTktRkZCMy00REEzLTg1MEQtNkQ3Nzk5QTMzMTlFIn0=
        has_after:
          type: boolean
          description: 'If false, this is the last page of data.'
        before:
          type: string
          nullable: true
          description: >-
            The opaque cursor pointing to the first record of the page. Set to
            `null` if the resulting collection is empty.
          example: eyJrIjoiN0E2RjQ2NjYtNzNGOC00QzM4LTlDOUYtNThCRkY2NDE2QzQ4In0=
        has_before:
          type: boolean
          description: 'If false, this is the first page of data.'
      title: CursorPage
    webhook-subscription-reference:
      type: object
      required:
        - id
      properties:
        id:
          $ref: '#/components/schemas/string-id'
      title: WebhookSubscriptionReference
    webhook-subscription-owner-type:
      type: string
      description: >-
        Webhook subscriptions owned by `Account` can be edited by all admins in
        this account. Webhook subscriptions owned by `User` can only be scoped
        to this user and can be edited by the same user only.

        .
      enum:
        - user
        - account
      title: WebhookSubscriptionOwnerType
    webhook-event-type-reference:
      type: object
      required:
        - id
      properties:
        id:
          $ref: '#/components/schemas/webhook-event-type-id'
      title: WebhookEventTypeReference
    webhook-subscription-event-type-filter-options:
      type: object
      nullable: true
      description: >-
        The event types to subscribe for. If omitted, all currently supported
        event types are assumed. If new event types are added, the subscription
        is not updated automatically to include them.

        .
      required:
        - event_types
      properties:
        event_types:
          type: array
          items:
            $ref: '#/components/schemas/webhook-event-type-reference'
      title: WebhookSubscriptionEventTypeFilterOptions
    user-reference:
      type: object
      required:
        - id
      properties:
        id:
          $ref: '#/components/schemas/string-id'
      title: UserReference
    webhook-subscription-user-filter-options:
      type: object
      nullable: true
      description: >-
        The user accounts to subscribe for. Only events related to these users
        will be reported to the `endpointUrl`. If omitted or set to `null`, all
        users are assumed, which is only available with `ownerType` of
        `Account`. Webhook subscriptions with `ownerType` of `User` must include
        the same user in the `scopeFilter`.

        .
      required:
        - users
      properties:
        users:
          type: array
          items:
            $ref: '#/components/schemas/user-reference'
      title: WebhookSubscriptionUserFilterOptions
    create-webhook-subscription-command:
      type: object
      required:
        - endpoint_url
        - owner_type
      properties:
        display_name:
          type: string
          description: >-
            If the value is not provided and the account type is Unite, then the
            name will be auto-generated.
          nullable: true
          minLength: 1
          maxLength: 60
          example: CRM Integration
        description:
          type: string
          nullable: true
          maxLength: 500
          example: Webhook for CRM integration
        endpoint_url:
          type: string
          description: >-
            The HTTP/HTTS URL of the endpoint to receive the POST callback once
            an event happens.
          format: uri
          example: 'https://yet-another-cool-crm.example.org'
        owner_type:
          $ref: '#/components/schemas/webhook-subscription-owner-type'
        is_enabled:
          type: boolean
          default: false
          description: >-
            A flag to enable or disable the webhook subscription. The `false`
            value is only supported on Unite accounts. The field value is
            ignored for all other account types.

            .
        event_type_filter:
          $ref: '#/components/schemas/webhook-subscription-event-type-filter-options'
        scope_filter:
          $ref: '#/components/schemas/webhook-subscription-user-filter-options'
      title: CreateWebhookSubscriptionCommand
    created-at-time:
      type: string
      description: The creation timestamp of a resource.
      format: date-time
      nullable: true
      title: CreatedAtTime
    updated-at-time:
      type: string
      format: date-time
      description: The last update timestamp of a resource.
      nullable: true
      title: UpdatedAtTime
    timestamp-audit-fields-optional:
      type: object
      properties:
        created_at_time:
          $ref: '#/components/schemas/created-at-time'
        updated_at_time:
          $ref: '#/components/schemas/updated-at-time'
      title: TimestampAuditFieldsOptional
    user-audit-fields-optional:
      type: object
      properties:
        created_by:
          $ref: '#/components/schemas/user'
        updated_by:
          $ref: '#/components/schemas/user'
      title: UserAuditFieldsOptional
    webhook-subscription-secret:
      type: object
      nullable: true
      required:
        - webhook_subscription_id
        - secret_value
      properties:
        webhook_subscription_id:
          $ref: '#/components/schemas/string-id'
        secret_value:
          type: string
          format: password
          example: oMekrSUoBkHTh3fv7p3AKytkQqFBgrQW
      title: WebhookSubscriptionSecret
    webhook-subscription-event-type-filter:
      type: object
      nullable: true
      required:
        - event_types
      properties:
        event_types:
          type: array
          items:
            $ref: '#/components/schemas/webhook-event-type'
      title: WebhookSubscriptionEventTypeFilter
    webhook-subscription-user-filter:
      type: object
      nullable: true
      required:
        - users
      properties:
        users:
          type: array
          items:
            $ref: '#/components/schemas/user'
      title: WebhookSubscriptionUserFilter
    webhook-subscription:
      allOf:
        - $ref: '#/components/schemas/webhook-subscription-reference'
        - $ref: '#/components/schemas/create-webhook-subscription-command'
        - $ref: '#/components/schemas/timestamp-audit-fields-optional'
        - $ref: '#/components/schemas/user-audit-fields-optional'
        - type: object
          properties:
            secret:
              $ref: '#/components/schemas/webhook-subscription-secret'
            event_type_filter:
              $ref: '#/components/schemas/webhook-subscription-event-type-filter'
            scope_filter:
              $ref: '#/components/schemas/webhook-subscription-user-filter'
      title: WebhookSubscription
    cursor-page-of-webhook-subscription:
      allOf:
        - $ref: '#/components/schemas/cursor-page'
        - type: object
          required:
            - items
          properties:
            items:
              type: array
              items:
                $ref: '#/components/schemas/webhook-subscription'
      title: CursorPageOfWebhookSubscription
    messenger-uuid:
      type: string
      minLength: 24
      maxLength: 24
      pattern: '^[0-9a-f]{24}$'
      example: 5d35f6a3fcc16b1360b1e890
      title: MessengerUuid
    conversation-id:
      allOf:
        - $ref: '#/components/schemas/messenger-uuid'
        - description: Unique identifier of the conversation.
      title: ConversationId
    conversation-event-id:
      allOf:
        - $ref: '#/components/schemas/messenger-uuid'
        - description: Unique identifier of the message.
      title: ConversationEventId
    message-type:
      type: string
      enum:
        - SMS
        - MMS
      title: MessageType
    e164-phone-number-no-plus:
      type: string
      description: >-
        Phone number in E.164 international format without a leading "+"
        character.
      pattern: '^[1-9]\d{1,14}$'
      example: '15307636905'
      title: E164PhoneNumberNoPlus
    message-origin:
      type: string
      description: >-
        Specifies the type of the sender. Currently, only `external` origin is
        supported which means some custom phone number outside of the net2phone
        account.

        .
      enum:
        - external
      title: MessageOrigin
    message-target:
      type: string
      description: >-
        Describes the type of the entity assigned to a phone number receiving
        the message.
      enum:
        - user
        - department
        - account
      x-n2p-enum:
        name: MessageTarget
        modelAsString: false
        values:
          - value: user
            description: The phone number receiving the message belongs to a user.
            name: User
          - value: department
            description: The phone number receiving the message belongs to a department.
            name: Department
          - value: account
            description: >-
              The phone number receiving the message belongs to account. E.g.
              the number can belong to a ring group or be unassigned.
            name: Account
      title: MessageTarget
    message-content:
      type: string
      description: >-
        The content of an SMS or MMS message. Media files are included as HTTPS
        URLs and separated using ";" character.
      minLength: 1
      example: 'Leaves; https://s3.amazonaws.com/iqntmms02/bh2IwkIwUGWXzzA9Brgt.jpeg'
      title: MessageContent
    webhook-message:
      type: object
      required:
        - conversation_id
        - message_id
        - type
        - originated
        - terminated
        - origin
        - target
        - content
        - from_user_id
      properties:
        conversation_id:
          $ref: '#/components/schemas/conversation-id'
        message_id:
          $ref: '#/components/schemas/conversation-event-id'
        type:
          $ref: '#/components/schemas/message-type'
        originated:
          allOf:
            - $ref: '#/components/schemas/e164-phone-number-no-plus'
            - description: The sender's phone number.
        terminated:
          allOf:
            - $ref: '#/components/schemas/e164-phone-number-no-plus'
            - description: The receiver's phone number.
        origin:
          $ref: '#/components/schemas/message-origin'
        target:
          $ref: '#/components/schemas/message-target'
        content:
          $ref: '#/components/schemas/message-content'
        from_user_id:
          allOf:
            - $ref: '#/components/schemas/messenger-uuid'
            - description: >-
                Internal identifier of the conversation participant, including
                external phone numbers not belonging to the net2phone account.
      title: WebhookMessage
    unite-user-id:
      type: integer
      description: Unique identifier of the user within an account.
      format: int32
      example: 1
      title: UniteUserId
    unite-account-id:
      type: integer
      format: int32
      description: Unique identifier of the account (tenant).
      example: 42
      title: UniteAccountId
    webhook-target-user:
      type: object
      description: Describes a user related to a webhook event.
      required:
        - id
        - account_id
        - name
      properties:
        id:
          $ref: '#/components/schemas/unite-user-id'
        name:
          type: string
          description: The full display name of the user.
          example: John Doe
        account_id:
          $ref: '#/components/schemas/unite-account-id'
      additionalProperties: false
      title: WebhookTargetUser
    unite-department-id:
      type: integer
      format: int32
      description: Unique identifier of the department within account.
      example: 42
      title: UniteDepartmentId
    webhook-target-department:
      type: object
      description: Describes a department related to a webhook event.
      required:
        - department_id
        - account_id
        - department
      properties:
        department_id:
          $ref: '#/components/schemas/unite-department-id'
        department:
          type: string
          description: The display name of the department.
          example: Marketing
        account_id:
          $ref: '#/components/schemas/unite-account-id'
      additionalProperties: false
      title: WebhookTargetDepartment
    webhook-target-account:
      type: object
      description: Describes an account related to a webhook event.
      required:
        - account_id
      properties:
        account_id:
          $ref: '#/components/schemas/unite-account-id'
      additionalProperties: false
      title: WebhookTargetAccount
    webhook-event-id:
      type: string
      description: Unique ID per webhook notification.
      example: 9ebdf7fd-f310-48dd-90e6-ecfc68136886
      title: WebhookEventId
    webhook-event:
      type: object
      required:
        - id
        - event
        - timestamp
      properties:
        id:
          $ref: '#/components/schemas/webhook-event-id'
        event:
          $ref: '#/components/schemas/webhook-event-type-id'
        timestamp:
          type: string
          format: date-time
          description: Date and time when the event was triggered.
      title: WebhookEvent
    message-received-event:
      allOf:
        - type: object
          required:
            - messenger_info
            - user
          properties:
            event:
              type: string
              enum:
                - message_received
            messenger_info:
              $ref: '#/components/schemas/webhook-message'
            user:
              description: The entity which is relevant to this webhook event.
              oneOf:
                - $ref: '#/components/schemas/webhook-target-user'
                - $ref: '#/components/schemas/webhook-target-department'
                - $ref: '#/components/schemas/webhook-target-account'
        - $ref: '#/components/schemas/webhook-event'
      title: MessageReceivedEvent
    update-webhook-subscription-command:
      allOf:
        - $ref: '#/components/schemas/create-webhook-subscription-command'
      title: UpdateWebhookSubscriptionCommand
    timestamp-audit-fields:
      type: object
      required:
        - created_at_time
      properties:
        created_at_time:
          allOf:
            - type: string
              nullable: false
            - $ref: '#/components/schemas/created-at-time'
        updated_at_time:
          $ref: '#/components/schemas/updated-at-time'
      title: TimestampAuditFields
    participant-id:
      type: string
      description: The unique identifier of the participant.
      example: 563cfe491ddc164f72000001
      pattern: '^[0-9a-f]{1,24}$'
      minLength: 1
      maxLength: 24
      title: ParticipantId
    user-participant:
      type: object
      required:
        - id
        - type
        - user
        - contact_method
      properties:
        id:
          $ref: '#/components/schemas/participant-id'
        type:
          type: string
          enum:
            - UserParticipant
        user:
          $ref: '#/components/schemas/user'
        contact_method:
          $ref: '#/components/schemas/contact-method'
      title: UserParticipant
    guest-participant:
      type: object
      required:
        - id
        - type
        - phone_number_contact_method
      properties:
        id:
          $ref: '#/components/schemas/participant-id'
        type:
          type: string
          enum:
            - GuestParticipant
        phone_number_contact_method:
          $ref: '#/components/schemas/phone-number-contact-method'
      title: GuestParticipant
    phone-number-contact-method:
      type: object
      required:
        - type
        - phone_number
      properties:
        type:
          type: string
          enum:
            - PhoneNumberContactMethod
        phone_number:
          $ref: '#/components/schemas/e164-phone-number-no-plus'
      title: PhoneNumberContactMethod
    phone-extension-contact-method:
      type: object
      required:
        - type
        - extension
      properties:
        type:
          type: string
          enum:
            - PhoneExtensionContactMethod
        extension:
          $ref: '#/components/schemas/phone-extension'
      title: PhoneExtensionContactMethod
    phone-extension:
      type: string
      pattern: '^[1-9]\d{1,5}$'
      minLength: 2
      maxLength: 6
      example: 14155
      title: PhoneExtension
    contact-method:
      oneOf:
        - $ref: '#/components/schemas/phone-number-contact-method'
        - $ref: '#/components/schemas/phone-extension-contact-method'
      discriminator:
        propertyName: type
        mapping:
          PhoneNumberContactMethod: '#/components/schemas/phone-number-contact-method'
          PhoneExtensionContactMethod: '#/components/schemas/phone-extension-contact-method'
      title: ContactMethod
    participant:
      oneOf:
        - $ref: '#/components/schemas/user-participant'
        - $ref: '#/components/schemas/guest-participant'
      discriminator:
        propertyName: type
        mapping:
          UserParticipant: '#/components/schemas/user-participant'
          GuestParticipant: '#/components/schemas/guest-participant'
      title: Participant
    conversation:
      allOf:
        - $ref: '#/components/schemas/timestamp-audit-fields'
        - type: object
          properties:
            id:
              $ref: '#/components/schemas/conversation-id'
            created_by_participant_id:
              $ref: '#/components/schemas/participant-id'
            participants:
              type: array
              items:
                $ref: '#/components/schemas/participant'
          required:
            - id
            - created_by_participant_id
            - participants
      title: Conversation
    cursor-page-of-conversation:
      allOf:
        - $ref: '#/components/schemas/cursor-page'
        - type: object
          required:
            - items
          properties:
            items:
              type: array
              items:
                $ref: '#/components/schemas/conversation'
      title: CursorPageOfConversation
    text-message-content:
      type: string
      description: The content of an SMS message.
      minLength: 1
      example: 'Hello, world!'
      title: TextMessageContent
    create-message-command:
      type: object
      properties:
        content:
          $ref: '#/components/schemas/text-message-content'
      required:
        - content
      title: CreateMessageCommand
    create-conversation-from-message-command:
      allOf:
        - $ref: '#/components/schemas/create-message-command'
        - type: object
          properties:
            recipient_contact_method:
              $ref: '#/components/schemas/contact-method'
          required:
            - recipient_contact_method
      title: CreateConversationFromMessageCommand
    conversation-event-base:
      type: object
      properties:
        id:
          $ref: '#/components/schemas/conversation-event-id'
        created_at_time:
          $ref: '#/components/schemas/created-at-time'
      required:
        - id
        - created_at_time
      title: ConversationEventBase
    message-conversation-event:
      allOf:
        - $ref: '#/components/schemas/conversation-event-base'
        - type: object
          properties:
            type:
              enum:
                - MessageConversationEvent
              type: string
            conversation_id:
              $ref: '#/components/schemas/conversation-id'
            sender_participant_id:
              $ref: '#/components/schemas/participant-id'
            content:
              $ref: '#/components/schemas/text-message-content'
          required:
            - type
            - conversation_id
            - sender_participant_id
            - content
      title: MessageConversationEvent
    conversation-event:
      oneOf:
        - $ref: '#/components/schemas/message-conversation-event'
      discriminator:
        propertyName: type
        mapping:
          MessageConversationEvent: '#/components/schemas/message-conversation-event'
      title: ConversationEvent
    cursor-page-of-conversation-event:
      allOf:
        - $ref: '#/components/schemas/cursor-page'
        - type: object
          required:
            - items
          properties:
            items:
              type: array
              items:
                $ref: '#/components/schemas/conversation-event'
      title: CursorPageOfConversationEvent
  headers:
    n2p-response-type:
      description: >-
        The type of the response schema in the body. It can be useful to
        distinguish between different response types before parsing the body.

        .
      schema:
        type: string
  responses:
    authentication-error:
      description: 'The authentication token is missing, expired or invalid.'
      headers:
        N2P-Response-Type:
          $ref: '#/components/headers/n2p-response-type'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/authentication-error'
    invalid-request-error:
      description: >-
        The provided request is semantically invalid or not supported on this
        account.
      headers:
        N2P-Response-Type:
          $ref: '#/components/headers/n2p-response-type'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/invalid-request-error'
    not-supported-error:
      description: The operation is not supported with the current net2phone account type.
      headers:
        N2P-Response-Type:
          $ref: '#/components/headers/n2p-response-type'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/not-supported-error'
    bad-request-error:
      description: The request is malformed (e.g. includes invalid JSON).
      headers:
        N2P-Response-Type:
          $ref: '#/components/headers/n2p-response-type'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/bad-request-error'
    forbidden-error:
      description: The operation is blocked due to insufficient access rights.
      headers:
        N2P-Response-Type:
          $ref: '#/components/headers/n2p-response-type'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/forbidden-error'
    not-found-error:
      description: The requested resource is not found.
      headers:
        N2P-Response-Type:
          $ref: '#/components/headers/n2p-response-type'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/not-found-error'
  parameters:
    limit:
      name: limit
      in: query
      description: Number of items per page.
      schema:
        type: integer
        format: int32
        default: 10
        minimum: 1
        maximum: 100
    before:
      name: before
      in: query
      description: >-
        The opaque cursor to paginate backwards. Cannot be used together with
        `after`.

        .
      schema:
        type: string
        example: eyJrIjoiRkM5RDhDQTktRkZCMy00REEzLTg1MEQtNkQ3Nzk5QTMzMTlFIn0=
    after:
      name: after
      in: query
      description: >-
        The opaque cursor to paginate forwards. Cannot be used together with
        `before`.

        .
      schema:
        type: string
        example: eyJrIjoiRkM5RDhDQTktRkZCMy00REEzLTg1MEQtNkQ3Nzk5QTMzMTlFIn0=
    webhook-signature:
      name: x-net2phone-signature
      in: header
      required: false
      x-n2p-accountBackendTypes:
        - unite
      description: >-
        Used to make sure the webhook request is authentic and comes from
        net2phone. To validate the signature:

        1. Retrieve the raw body of the webhook request.

        2. Concatentate two parts using the `:` character. The resulting string
        should looke like `{signature}:{raw_body}`.

        3. Compute the HMAC-SHA256 hash from the given string. Use the
        `x-net2phone-timestamp` header as the key. All "string to bytes"
        conversions should be performed using UTF-8 encoding.

        4. Convert the resulting HMAC-SHA256 hash bytes back to a string using
        HEX encoding (without `-` characters).

        5. Compare the resulting string with the value present in the
        `x-net2phone-signature` header. If they are equal, the request is
        authentic.


        See [support
        article](https://support.net2phone.com/s/article/Securing-net2phone-webhook-requests-to-your-application)
        for more information.

        .
      schema:
        type: string
        example: fe4aad021345e9c6506e163ba62aea8a0f15047712618482a2423cc008dd2fb2
    webhook-timestamp:
      name: x-net2phone-timestamp
      in: header
      required: false
      description: >-
        The timestamp of the request. Used to validate the authenticity of the
        webhook request in combination with `x-net2phone-signature` header.
      x-n2p-accountBackendTypes:
        - unite
      schema:
        type: string
        format: date-time
        example: 2021-09-17T09:13:08.912Z
    webhook-subscription-id:
      name: webhook_subscription_id
      in: path
      required: true
      description: The unique id of the webhook subscription within account.
      schema:
        $ref: '#/components/schemas/string-id'
    conversation-id:
      name: conversation_id
      in: path
      required: true
      description: The unique id of the conversation.
      schema:
        $ref: '#/components/schemas/conversation-id'
    event-id:
      name: event_id
      in: path
      required: true
      description: Unique identifier of the event.
      schema:
        $ref: '#/components/schemas/conversation-event-id'
  examples:
    unite-webhook-subscription-request:
      summary: User-scoped webhook in Unite account.
      x-n2p-accountBackendTypes:
        - unite
      value:
        display_name: User-scoped Webhook for CRM
        description: Webhook for CRM integration for a specific user.
        endpoint_url: 'https://yet-another-cool-crm.example.org'
        owner_type: user
        is_enabled: true
        event_type_filter:
          event_types:
            - id: call_ringing
            - id: call_missed
            - id: call_completed
        scope_filter:
          users:
            - id: 6gtkcdsr
    4psa-webhook-subscription-request:
      summary: User-scoped webhook in 4PSA account.
      x-n2p-accountBackendTypes:
        - 4psa
      value:
        endpoint_url: 'https://yet-another-cool-crm.example.org'
        owner_type: user
        event_type_filter:
          event_types:
            - id: call_ringing
            - id: call_missed
            - id: call_completed
        scope_filter:
          users:
            - id: 6gtkcdsr
    netsapiens-webhook-subscription-request:
      summary: User-scoped webhook in NetSapiens account.
      x-n2p-accountBackendTypes:
        - netsapiens
      value:
        endpoint_url: 'https://yet-another-cool-crm.example.org'
        owner_type: user
        event_type_filter:
          event_types:
            - id: call_ringing
            - id: call_missed
            - id: call_completed
        scope_filter:
          users:
            - id: 6gtkcdsr
    unite-webhook-subscription-response:
      summary: User-scoped webhook in Unite account.
      x-n2p-accountBackendTypes:
        - unite
      value:
        id: 6gtkcdsr
        display_name: User-scoped Webhook for CRM
        description: Webhook for CRM integration for a specific user.
        endpoint_url: 'https://yet-another-cool-crm.example.org'
        owner_type: user
        is_enabled: true
        event_type_filter:
          event_types:
            - id: call_ringing
              display_name: Call Ringing
            - id: call_missed
              display_name: Call Missed
            - id: call_completed
              display_name: Call Completed
        scope_filter:
          users:
            - id: 6gtkcdsr
              first_name: John
              last_name: Doe
              email: john.doe@example.com
              avatar:
                user_id: 6gtkcdsr
                avatar_images:
                  - url: >-
                      https://n2p-messaging-prod-storage.s3.us-east-1.amazonaws.com/6082ce5e436acf00018faf27-1619430611421-200px.jpg
                    size_pixels: 400
                    kind: original
              role:
                id: Regular
                display_name: Regular User
        created_at_time: '2019-08-24T14:15:22Z'
        updated_at_time: null
        created_by:
          id: 6gtkcdsr
          first_name: John
          last_name: Doe
          email: john.doe@example.com
          avatar:
            user_id: 6gtkcdsr
            avatar_images:
              - url: >-
                  https://n2p-messaging-prod-storage.s3.us-east-1.amazonaws.com/6082ce5e436acf00018faf27-1619430611421-200px.jpg
                size_pixels: 400
                kind: original
          role:
            id: Regular
            display_name: Regular User
        updated_by: null
        secret:
          webhook_subscription_id: 6gtkcdsr
          secret_value: oMekrSUoBkHTh3fv7p3AKytkQqFBgrQW
    netsapiens-webhook-subscription-response:
      summary: User-scoped webhook in NetSapiens account.
      x-n2p-accountBackendTypes:
        - netsapiens
      value:
        id: 6gtkcdsr
        endpoint_url: 'https://yet-another-cool-crm.example.org'
        owner_type: user
        event_type_filter:
          event_types:
            - id: call_ringing
              display_name: Call Ringing
            - id: call_missed
              display_name: Call Missed
            - id: call_completed
              display_name: Call Completed
        scope_filter:
          users:
            - id: 6gtkcdsr
              first_name: John
              last_name: Doe
              email: john.doe@example.com
              role:
                id: Basic User
                display_name: Basic User
    4psa-webhook-subscription-response:
      summary: User-scoped webhook in 4PSA account.
      x-n2p-accountBackendTypes:
        - 4psa
      value:
        id: 6gtkcdsr
        endpoint_url: 'https://yet-another-cool-crm.example.org'
        owner_type: user
        event_type_filter:
          event_types:
            - id: call_ringing
              display_name: Call Ringing
            - id: call_missed
              display_name: Call Missed
            - id: call_completed
              display_name: Call Completed
        scope_filter:
          users:
            - id: 6gtkcdsr
              first_name: John
              last_name: Doe
              email: john.doe@example.com
              role:
                id: member
                display_name: member
    mms-to-user:
      summary: MMS from external phone number to a phone number assigned to a User.
      value:
        id: 41e8de4c-806c-4be4-835b-a216a9b4b8e6
        event: message_received
        timestamp: '2021-09-17T09:10:03.67Z'
        user:
          id: 1
          name: John Doe
          account_id: 42
        messenger_info:
          message_id: 61445b6b471db5000112c892
          conversation_id: 61445b1cf2f38a00015540c1
          type: MMS
          originated: '15307636905'
          terminated: '15168660248'
          origin: external
          target: user
          content: >-
            Look at the picture!;
            https://s3.amazonaws.com/iqntmms02/bh2IwkLwAGWXzzA9Brgt.jpeg
          from_user_id: 61435642343f430001253bfc
    sms-to-department:
      summary: >-
        SMS from external phone number to a phone number assigned to a
        Department.
      value:
        id: 44a2f437-58da-4dd0-8204-cf5e000eb659
        event: message_received
        timestamp: '2021-09-17T09:02:45.78Z'
        user:
          account_id: 1
          department: Marketing
          department_id: 2
        messenger_info:
          message_id: 614459b5471db5000112c87d
          conversation_id: 6144597d471db5000112c877
          type: SMS
          originated: '15307636905'
          terminated: '15168560339'
          origin: external
          target: department
          content: 'Hello, there!'
          from_user_id: 61435642343f430001253bfc
  callbacks:
    message-received:
      '{$request.body#/endpointUrl}':
        post:
          operationId: NotifyMessageReceived
          description: >-
            This event is triggered when a Team Member, Department or Account
            receives a message. Currently only works for messages coming from
            external phone numbers which are not bound to the net2phone account.

            .
          parameters:
            - $ref: '#/components/parameters/webhook-signature'
            - $ref: '#/components/parameters/webhook-timestamp'
          requestBody:
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/message-received-event'
                examples:
                  MmsToUser:
                    $ref: '#/components/examples/mms-to-user'
                  SmsToDepartment:
                    $ref: '#/components/examples/sms-to-department'
          responses:
            default:
              description: >-
                The response of the webhook endpoint is discarded, webhook
                requests are never retried.
          summary: Notify message received
          x-n2p-accountBackendTypes:
            - unite
