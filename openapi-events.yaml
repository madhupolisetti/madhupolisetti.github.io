openapi: 3.0.3
info:
  title: net2phone API
  description: net2phone's public API.
  version: internal
  x-internalVersion: spec-0.12.0
  license:
    name: MIT
    url: 'https://spdx.org/licenses/MIT'
  termsOfService: 'https://app.net2phone.com/settings/termsandpolicies'
servers:
  - url: 'https://api-dev.qa.n2p.io/v2'
    description: net2phone Development API Server.
  - url: 'https://api-qa.qa.n2p.io/v2'
    description: net2phone QA API Server.
  - url: 'https://api-uat.prod.n2p.io/v2'
    description: net2phone UAT API Server.
  - url: 'https://api-prod.prod.n2p.io/v2'
    description: net2phone Production API Server.
security:
  - n2pOpenIdConnect: []
tags:
  - name: WebhookSubscription
    description: 'Subscribe to call, voicemail, message events.'
  - name: User
    description: Manage team members and their access level.
  - name: Conversation
    description: 'Manage conversations, send messages, receive events.'
  - name: CallQueue
    description: Manage call queues.
  - name: Audio
    description: Manage audio files.
paths:
  '/users:batch-get':
    get:
      x-n2p-internal: true
      operationId: BatchGetUsers
      description: >-
        List users batch matching the input user ids. This will return a
        successful response even if the result collection is empty, or if some
        user with ids provided are not found.
      tags:
        - User
      parameters:
        - in: query
          name: ids
          required: true
          schema:
            type: array
            minItems: 1
            maxItems: 100
            items:
              $ref: '#/components/schemas/string-id'
          description: The list of numeric ids of users.
      responses:
        '200':
          description: >-
            Collection of users matching the input ids, exclusing those that
            were not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/collection-of-user'
        '401':
          $ref: '#/components/responses/authentication-error'
        '422':
          description: >-
            The provided request is semantically invalid or not supported on
            this account.
          headers:
            N2P-Response-Type:
              $ref: '#/components/headers/n2p-response-type'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/invalid-request-error'
      summary: Batch get users
      x-n2p-accountBackendTypes:
        - unite
  /webhook-event-types:
    get:
      operationId: ListWebhookEventTypes
      description: List all supported event types based the account type you belong to.
      x-n2p-accountBackendTypes:
        - unite
        - 4psa
        - netsapiens
      tags:
        - WebhookSubscription
      responses:
        '200':
          description: Collection of webhook event types.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/collection-of-webhook-event-type'
              examples:
                Default:
                  summary: >-
                    List of supported webhook event types depending on account
                    type.
                  x-n2p-accountBackendTypes:
                    - unite
                    - 4psa
                    - netsapiens
                  value:
                    items:
                      - id: call_ringing
                        display_name: Call Ringing
          headers:
            RateLimit-Limit:
              $ref: '#/components/headers/rate-limit-limit'
            RateLimit-Remaining:
              $ref: '#/components/headers/rate-limit-remaining'
            RateLimit-Reset:
              $ref: '#/components/headers/rate-limit-reset'
        '401':
          $ref: '#/components/responses/authentication-error'
        '422':
          $ref: '#/components/responses/not-supported-error'
        '429':
          $ref: '#/components/responses/throttling-error'
      summary: List webhook event types
      x-n2p-throttlingQuota: 1
  /webhook-subscriptions:
    get:
      operationId: ListWebhookSubscription
      description: >-
        Lists all webhook subscriptions accessible to the current user. `Admin`
        users will get both `Account` and `User` subscriptions. `Regular` users
        get their own webhook subscriptions only.
      tags:
        - WebhookSubscription
      parameters:
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/before'
        - $ref: '#/components/parameters/after'
      responses:
        '200':
          description: Page of webhook subscriptions.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/cursor-page-of-webhook-subscription'
          headers:
            RateLimit-Limit:
              $ref: '#/components/headers/rate-limit-limit'
            RateLimit-Remaining:
              $ref: '#/components/headers/rate-limit-remaining'
            RateLimit-Reset:
              $ref: '#/components/headers/rate-limit-reset'
        '400':
          $ref: '#/components/responses/bad-request-error'
        '401':
          $ref: '#/components/responses/authentication-error'
        '422':
          $ref: '#/components/responses/invalid-request-error'
        '429':
          $ref: '#/components/responses/throttling-error'
      summary: List webhook subscription
      x-n2p-accountBackendTypes:
        - unite
      x-n2p-throttlingQuota: 1
    post:
      operationId: CreateWebhookSubscription
      description: >-
        Creates a webhook subscription to receive callbacks on `endpoint_url`
        for the event types subscribed to.
      x-n2p-accountBackendTypes:
        - unite
        - netsapiens
        - 4psa
      tags:
        - WebhookSubscription
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/create-webhook-subscription-command'
            examples:
              Unite:
                $ref: '#/components/examples/unite-webhook-subscription-request'
              4PSA:
                $ref: '#/components/examples/4psa-webhook-subscription-request'
              NetSapiens:
                $ref: '#/components/examples/netsapiens-webhook-subscription-request'
      responses:
        '201':
          description: Webhook subscription was succesfully created.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/webhook-subscription'
              examples:
                Unite:
                  $ref: '#/components/examples/unite-webhook-subscription-response'
                NetSapiens:
                  $ref: >-
                    #/components/examples/netsapiens-webhook-subscription-response
                4psa:
                  $ref: '#/components/examples/4psa-webhook-subscription-response'
          headers:
            RateLimit-Limit:
              $ref: '#/components/headers/rate-limit-limit'
            RateLimit-Remaining:
              $ref: '#/components/headers/rate-limit-remaining'
            RateLimit-Reset:
              $ref: '#/components/headers/rate-limit-reset'
        '400':
          $ref: '#/components/responses/bad-request-error'
        '401':
          $ref: '#/components/responses/authentication-error'
        '403':
          $ref: '#/components/responses/forbidden-error'
        '404':
          $ref: '#/components/responses/not-found-error'
        '422':
          $ref: '#/components/responses/invalid-request-error'
        '429':
          $ref: '#/components/responses/throttling-error'
      callbacks:
        CallAnswered:
          $ref: '#/components/callbacks/call-answered'
        CallBlindTransfer:
          $ref: '#/components/callbacks/call-blind-transfer'
        CallBlocked:
          $ref: '#/components/callbacks/call-blocked'
        CallBusy:
          $ref: '#/components/callbacks/call-busy'
        CallCompleted:
          $ref: '#/components/callbacks/call-completed'
        CallConsultativeTransfer:
          $ref: '#/components/callbacks/call-consultative-transfer'
        CallForward:
          $ref: '#/components/callbacks/call-forward'
        CallHold:
          $ref: '#/components/callbacks/call-hold'
        CallMissed:
          $ref: '#/components/callbacks/call-missed'
        CallPark:
          $ref: '#/components/callbacks/call-park'
        CallPickup:
          $ref: '#/components/callbacks/call-pickup'
        CallRecorded:
          $ref: '#/components/callbacks/call-recorded'
        CallRecordingFailed:
          $ref: '#/components/callbacks/call-recording-failed'
        CallResume:
          $ref: '#/components/callbacks/call-resume'
        CallRgQueueCompleted:
          $ref: '#/components/callbacks/call-rg-queue-completed'
        CallRgQueueEntered:
          $ref: '#/components/callbacks/call-rg-queue-entered'
        CallRgQueueTier:
          $ref: '#/components/callbacks/call-rg-queue-tier'
        CallRinging:
          $ref: '#/components/callbacks/call-ringing'
        CallUnpark:
          $ref: '#/components/callbacks/call-unpark'
        EmergencyCall:
          $ref: '#/components/callbacks/emergency-call'
        MessageReceived:
          $ref: '#/components/callbacks/message-received'
        VoicemailMissed:
          $ref: '#/components/callbacks/voicemail-missed'
        VoicemailNotify:
          $ref: '#/components/callbacks/voicemail-notify'
        VoicemailReceived:
          $ref: '#/components/callbacks/voicemail-received'
      summary: Create webhook subscription
      x-n2p-throttlingQuota: 1
  '/webhook-subscriptions/{webhook_subscription_id}':
    get:
      operationId: GetWebhookSubscription
      description: >-
        Get details of specified webhook subscription if you are an `admin` of
        this account or `owner` of that subscription.
      x-n2p-accountBackendTypes:
        - unite
        - netsapiens
        - 4psa
      tags:
        - WebhookSubscription
      parameters:
        - $ref: '#/components/parameters/webhook-subscription-id'
      responses:
        '200':
          description: Webhook subscription object.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/webhook-subscription'
              examples:
                Unite:
                  $ref: '#/components/examples/unite-webhook-subscription-response'
                NetSapiens:
                  $ref: >-
                    #/components/examples/netsapiens-webhook-subscription-response
                4PSA:
                  $ref: '#/components/examples/4psa-webhook-subscription-response'
          headers:
            RateLimit-Limit:
              $ref: '#/components/headers/rate-limit-limit'
            RateLimit-Remaining:
              $ref: '#/components/headers/rate-limit-remaining'
            RateLimit-Reset:
              $ref: '#/components/headers/rate-limit-reset'
        '401':
          $ref: '#/components/responses/authentication-error'
        '404':
          $ref: '#/components/responses/not-found-error'
        '422':
          $ref: '#/components/responses/not-supported-error'
        '429':
          $ref: '#/components/responses/throttling-error'
      summary: Get webhook subscription
      x-n2p-throttlingQuota: 1
    put:
      operationId: UpdateWebhookSubscription
      description: >-
        Update the details of specified subscription if you are an `admin` of
        this account or `owner` of that subscription.
      x-n2p-accountBackendTypes:
        - unite
        - netsapiens
        - 4psa
      tags:
        - WebhookSubscription
      parameters:
        - $ref: '#/components/parameters/webhook-subscription-id'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/update-webhook-subscription-command'
            examples:
              Unite:
                $ref: '#/components/examples/unite-webhook-subscription-request'
              4PSA:
                $ref: '#/components/examples/4psa-webhook-subscription-request'
              NetSapiens:
                $ref: '#/components/examples/netsapiens-webhook-subscription-request'
      responses:
        '200':
          description: Updated webhook subscription object.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/webhook-subscription'
              examples:
                Unite:
                  $ref: '#/components/examples/unite-webhook-subscription-response'
                NetSapiens:
                  $ref: >-
                    #/components/examples/netsapiens-webhook-subscription-response
                4PSA:
                  $ref: '#/components/examples/4psa-webhook-subscription-response'
          headers:
            RateLimit-Limit:
              $ref: '#/components/headers/rate-limit-limit'
            RateLimit-Remaining:
              $ref: '#/components/headers/rate-limit-remaining'
            RateLimit-Reset:
              $ref: '#/components/headers/rate-limit-reset'
        '400':
          $ref: '#/components/responses/bad-request-error'
        '401':
          $ref: '#/components/responses/authentication-error'
        '403':
          $ref: '#/components/responses/forbidden-error'
        '404':
          $ref: '#/components/responses/not-found-error'
        '422':
          $ref: '#/components/responses/invalid-request-error'
        '429':
          $ref: '#/components/responses/throttling-error'
      callbacks:
        CallAnswered:
          $ref: '#/components/callbacks/call-answered'
        CallBlindTransfer:
          $ref: '#/components/callbacks/call-blind-transfer'
        CallBlocked:
          $ref: '#/components/callbacks/call-blocked'
        CallBusy:
          $ref: '#/components/callbacks/call-busy'
        CallCompleted:
          $ref: '#/components/callbacks/call-completed'
        CallConsultativeTransfer:
          $ref: '#/components/callbacks/call-consultative-transfer'
        CallForward:
          $ref: '#/components/callbacks/call-forward'
        CallHold:
          $ref: '#/components/callbacks/call-hold'
        CallMissed:
          $ref: '#/components/callbacks/call-missed'
        CallPark:
          $ref: '#/components/callbacks/call-park'
        CallPickup:
          $ref: '#/components/callbacks/call-pickup'
        CallRecorded:
          $ref: '#/components/callbacks/call-recorded'
        CallRecordingFailed:
          $ref: '#/components/callbacks/call-recording-failed'
        CallResume:
          $ref: '#/components/callbacks/call-resume'
        CallRgQueueCompleted:
          $ref: '#/components/callbacks/call-rg-queue-completed'
        CallRgQueueEntered:
          $ref: '#/components/callbacks/call-rg-queue-entered'
        CallRgQueueTier:
          $ref: '#/components/callbacks/call-rg-queue-tier'
        CallRinging:
          $ref: '#/components/callbacks/call-ringing'
        CallUnpark:
          $ref: '#/components/callbacks/call-unpark'
        EmergencyCall:
          $ref: '#/components/callbacks/emergency-call'
        MessageReceived:
          $ref: '#/components/callbacks/message-received'
        VoicemailMissed:
          $ref: '#/components/callbacks/voicemail-missed'
        VoicemailNotify:
          $ref: '#/components/callbacks/voicemail-notify'
        VoicemailReceived:
          $ref: '#/components/callbacks/voicemail-received'
      summary: Update webhook subscription
      x-n2p-throttlingQuota: 1
    delete:
      operationId: DeleteWebhookSubscription
      description: >-
        Delete specified webhook subscription if you are an `admin` of this
        account or `owner` of that subscription.
      x-n2p-accountBackendTypes:
        - unite
        - netsapiens
        - 4psa
      parameters:
        - $ref: '#/components/parameters/webhook-subscription-id'
      tags:
        - WebhookSubscription
      responses:
        '204':
          description: The webhook subscription was deleted successfully.
          headers:
            RateLimit-Limit:
              $ref: '#/components/headers/rate-limit-limit'
            RateLimit-Remaining:
              $ref: '#/components/headers/rate-limit-remaining'
            RateLimit-Reset:
              $ref: '#/components/headers/rate-limit-reset'
        '401':
          $ref: '#/components/responses/authentication-error'
        '404':
          $ref: '#/components/responses/not-found-error'
        '422':
          $ref: '#/components/responses/not-supported-error'
        '429':
          $ref: '#/components/responses/throttling-error'
      summary: Delete webhook subscription
      x-n2p-throttlingQuota: 1
  '/webhook-subscriptions/{webhook_subscription_id}/secret':
    put:
      operationId: RegenerateWebhookSubscriptionSecret
      description: >-
        Regenerate the secret of specified webhook subscription if you are an
        `admin` of this account or `owner` of this subscription.
      tags:
        - WebhookSubscription
      parameters:
        - $ref: '#/components/parameters/webhook-subscription-id'
      responses:
        '200':
          description: Webhook subscription secret was regenerated successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/webhook-subscription-secret'
          headers:
            RateLimit-Limit:
              $ref: '#/components/headers/rate-limit-limit'
            RateLimit-Remaining:
              $ref: '#/components/headers/rate-limit-remaining'
            RateLimit-Reset:
              $ref: '#/components/headers/rate-limit-reset'
        '401':
          $ref: '#/components/responses/authentication-error'
        '404':
          $ref: '#/components/responses/not-found-error'
        '422':
          $ref: '#/components/responses/not-supported-error'
        '429':
          $ref: '#/components/responses/throttling-error'
      summary: Regenerate webhook subscription secret
      x-n2p-accountBackendTypes:
        - unite
      x-n2p-throttlingQuota: 1
  /conversations:
    get:
      operationId: ListConversations
      description: >-
        Returns the paginated list of all conversations that are accessible to
        the user making the request.
      tags:
        - Conversation
      parameters:
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/before'
        - $ref: '#/components/parameters/after'
      responses:
        '200':
          description: Page of conversations.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/cursor-page-of-conversation'
          headers:
            RateLimit-Limit:
              $ref: '#/components/headers/rate-limit-limit'
            RateLimit-Remaining:
              $ref: '#/components/headers/rate-limit-remaining'
            RateLimit-Reset:
              $ref: '#/components/headers/rate-limit-reset'
        '401':
          $ref: '#/components/responses/authentication-error'
        '422':
          $ref: '#/components/responses/invalid-request-error'
        '429':
          $ref: '#/components/responses/throttling-error'
      summary: List conversations
      x-n2p-accountBackendTypes:
        - unite
      x-n2p-throttlingQuota: 1
  /conversations/@any/messages:
    post:
      operationId: CreateConversationFromMessage
      description: Create a new conversation with your first message.
      tags:
        - Conversation
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/create-conversation-from-message-command'
      responses:
        '200':
          description: >-
            The `MessageConversationEvent` that was posted to a newly created
            conversation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/message-conversation-event'
          headers:
            RateLimit-Limit:
              $ref: '#/components/headers/rate-limit-limit'
            RateLimit-Remaining:
              $ref: '#/components/headers/rate-limit-remaining'
            RateLimit-Reset:
              $ref: '#/components/headers/rate-limit-reset'
        '401':
          $ref: '#/components/responses/authentication-error'
        '403':
          $ref: '#/components/responses/forbidden-error'
        '404':
          $ref: '#/components/responses/not-found-error'
        '422':
          $ref: '#/components/responses/invalid-request-error'
        '429':
          $ref: '#/components/responses/throttling-error'
      summary: Create conversation from message
      x-n2p-accountBackendTypes:
        - unite
      x-n2p-throttlingQuota: 1
  '/conversations/{conversation_id}/events/{event_id}':
    get:
      operationId: GetConversationEvent
      description: Get specified conversation event.
      tags:
        - Conversation
      parameters:
        - $ref: '#/components/parameters/conversation-id'
        - $ref: '#/components/parameters/event-id'
      responses:
        '200':
          description: Specific event from the conversation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/message-conversation-event'
          headers:
            RateLimit-Limit:
              $ref: '#/components/headers/rate-limit-limit'
            RateLimit-Remaining:
              $ref: '#/components/headers/rate-limit-remaining'
            RateLimit-Reset:
              $ref: '#/components/headers/rate-limit-reset'
        '401':
          $ref: '#/components/responses/authentication-error'
        '404':
          $ref: '#/components/responses/not-found-error'
        '422':
          $ref: '#/components/responses/invalid-request-error'
        '429':
          $ref: '#/components/responses/throttling-error'
      summary: Get conversation event
      x-n2p-accountBackendTypes:
        - unite
      x-n2p-throttlingQuota: 1
  '/conversations/{conversation_id}/messages':
    post:
      operationId: CreateMessageInConversation
      description: Create a message in an existing conversation.
      tags:
        - Conversation
      parameters:
        - $ref: '#/components/parameters/conversation-id'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/create-message-command'
      responses:
        '200':
          description: >-
            The message was sent successfully. Returns back the
            `MessageConversationEvent` object.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/message-conversation-event'
          headers:
            RateLimit-Limit:
              $ref: '#/components/headers/rate-limit-limit'
            RateLimit-Remaining:
              $ref: '#/components/headers/rate-limit-remaining'
            RateLimit-Reset:
              $ref: '#/components/headers/rate-limit-reset'
        '401':
          $ref: '#/components/responses/authentication-error'
        '403':
          $ref: '#/components/responses/forbidden-error'
        '404':
          $ref: '#/components/responses/not-found-error'
        '422':
          $ref: '#/components/responses/invalid-request-error'
        '429':
          $ref: '#/components/responses/throttling-error'
      summary: Create message in conversation
      x-n2p-accountBackendTypes:
        - unite
      x-n2p-throttlingQuota: 1
  '/conversations/{conversation_id}/events':
    get:
      operationId: ListConversationEvents
      description: Lists events of specified conversation.
      tags:
        - Conversation
      parameters:
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/before'
        - $ref: '#/components/parameters/after'
        - $ref: '#/components/parameters/conversation-id'
      responses:
        '200':
          description: Page of conversation events.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/cursor-page-of-conversation-event'
          headers:
            RateLimit-Limit:
              $ref: '#/components/headers/rate-limit-limit'
            RateLimit-Remaining:
              $ref: '#/components/headers/rate-limit-remaining'
            RateLimit-Reset:
              $ref: '#/components/headers/rate-limit-reset'
        '401':
          $ref: '#/components/responses/authentication-error'
        '404':
          $ref: '#/components/responses/not-found-error'
        '422':
          $ref: '#/components/responses/invalid-request-error'
        '429':
          $ref: '#/components/responses/throttling-error'
      summary: List conversation events
      x-n2p-accountBackendTypes:
        - unite
      x-n2p-throttlingQuota: 1
  /call-queues:
    get:
      operationId: ListCallQueues
      description: Lists call queues.
      tags:
        - CallQueue
      parameters:
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/before'
        - $ref: '#/components/parameters/after'
      responses:
        '200':
          description: Page of call queues.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/cursor-page-of-call-queue'
          headers:
            RateLimit-Limit:
              $ref: '#/components/headers/rate-limit-limit'
            RateLimit-Remaining:
              $ref: '#/components/headers/rate-limit-remaining'
            RateLimit-Reset:
              $ref: '#/components/headers/rate-limit-reset'
        '401':
          $ref: '#/components/responses/authentication-error'
        '403':
          $ref: '#/components/responses/forbidden-error'
        '422':
          $ref: '#/components/responses/invalid-request-error'
        '429':
          $ref: '#/components/responses/throttling-error'
      summary: List call queues
      x-n2p-accountBackendTypes:
        - unite
      x-n2p-throttlingQuota: 1
    post:
      operationId: CreateCallQueue
      description: Create call queue.
      tags:
        - CallQueue
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/create-call-queue-command'
      responses:
        '201':
          description: Call queue was succesfully created.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/call-queue-details'
          headers:
            RateLimit-Limit:
              $ref: '#/components/headers/rate-limit-limit'
            RateLimit-Remaining:
              $ref: '#/components/headers/rate-limit-remaining'
            RateLimit-Reset:
              $ref: '#/components/headers/rate-limit-reset'
        '400':
          $ref: '#/components/responses/bad-request-error'
        '401':
          $ref: '#/components/responses/authentication-error'
        '403':
          $ref: '#/components/responses/forbidden-error'
        '404':
          $ref: '#/components/responses/not-found-error'
        '422':
          $ref: '#/components/responses/invalid-request-error'
        '429':
          $ref: '#/components/responses/throttling-error'
      summary: Create call queue
      x-n2p-accountBackendTypes:
        - unite
      x-n2p-throttlingQuota: 1
  '/call-queues/{call_queue_id}':
    get:
      operationId: GetCallQueue
      description: Get details of specified call queue.
      tags:
        - CallQueue
      parameters:
        - $ref: '#/components/parameters/call-queue-id'
      responses:
        '200':
          description: Call queue object.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/call-queue-details'
          headers:
            RateLimit-Limit:
              $ref: '#/components/headers/rate-limit-limit'
            RateLimit-Remaining:
              $ref: '#/components/headers/rate-limit-remaining'
            RateLimit-Reset:
              $ref: '#/components/headers/rate-limit-reset'
        '401':
          $ref: '#/components/responses/authentication-error'
        '404':
          $ref: '#/components/responses/not-found-error'
        '422':
          $ref: '#/components/responses/not-supported-error'
        '429':
          $ref: '#/components/responses/throttling-error'
      summary: Get call queue
      x-n2p-accountBackendTypes:
        - unite
      x-n2p-throttlingQuota: 1
    put:
      operationId: UpdateCallQueue
      description: Update the details of specified call queue.
      tags:
        - CallQueue
      parameters:
        - $ref: '#/components/parameters/call-queue-id'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/create-call-queue-command'
      responses:
        '200':
          description: Updated call queue object.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/call-queue-details'
          headers:
            RateLimit-Limit:
              $ref: '#/components/headers/rate-limit-limit'
            RateLimit-Remaining:
              $ref: '#/components/headers/rate-limit-remaining'
            RateLimit-Reset:
              $ref: '#/components/headers/rate-limit-reset'
        '400':
          $ref: '#/components/responses/bad-request-error'
        '401':
          $ref: '#/components/responses/authentication-error'
        '403':
          $ref: '#/components/responses/forbidden-error'
        '404':
          $ref: '#/components/responses/not-found-error'
        '422':
          $ref: '#/components/responses/invalid-request-error'
        '429':
          $ref: '#/components/responses/throttling-error'
      summary: Update call queue
      x-n2p-accountBackendTypes:
        - unite
      x-n2p-throttlingQuota: 1
    delete:
      operationId: DeleteCallQueue
      description: Delete the specified call queue.
      parameters:
        - $ref: '#/components/parameters/call-queue-id'
      tags:
        - CallQueue
      responses:
        '204':
          description: Call queue was deleted successfully.
          headers:
            RateLimit-Limit:
              $ref: '#/components/headers/rate-limit-limit'
            RateLimit-Remaining:
              $ref: '#/components/headers/rate-limit-remaining'
            RateLimit-Reset:
              $ref: '#/components/headers/rate-limit-reset'
        '401':
          $ref: '#/components/responses/authentication-error'
        '403':
          $ref: '#/components/responses/forbidden-error'
        '404':
          $ref: '#/components/responses/not-found-error'
        '422':
          $ref: '#/components/responses/not-supported-error'
        '429':
          $ref: '#/components/responses/throttling-error'
      summary: Delete call queue
      x-n2p-accountBackendTypes:
        - unite
      x-n2p-throttlingQuota: 1
  /audio:
    post:
      operationId: UploadAudio
      description: Upload audio.
      tags:
        - Audio
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/create-audio-command'
      responses:
        '201':
          description: The audio file was upload successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/audio'
          headers:
            RateLimit-Limit:
              $ref: '#/components/headers/rate-limit-limit'
            RateLimit-Remaining:
              $ref: '#/components/headers/rate-limit-remaining'
            RateLimit-Reset:
              $ref: '#/components/headers/rate-limit-reset'
        '401':
          $ref: '#/components/responses/authentication-error'
        '403':
          $ref: '#/components/responses/forbidden-error'
        '422':
          $ref: '#/components/responses/invalid-request-error'
        '429':
          $ref: '#/components/responses/throttling-error'
      summary: Upload audio
      x-n2p-accountBackendTypes:
        - unite
      x-n2p-throttlingQuota: 1
  '/audio/{audio_key}':
    get:
      operationId: DownloadAudio
      description: Get audio file by Key.
      tags:
        - Audio
      parameters:
        - $ref: '#/components/parameters/audio-key'
      responses:
        '200':
          description: Direct link to audio file.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/audio'
          headers:
            RateLimit-Limit:
              $ref: '#/components/headers/rate-limit-limit'
            RateLimit-Remaining:
              $ref: '#/components/headers/rate-limit-remaining'
            RateLimit-Reset:
              $ref: '#/components/headers/rate-limit-reset'
        '401':
          $ref: '#/components/responses/authentication-error'
        '404':
          $ref: '#/components/responses/not-found-error'
        '422':
          $ref: '#/components/responses/invalid-request-error'
        '429':
          $ref: '#/components/responses/throttling-error'
      summary: Download audio
      x-n2p-accountBackendTypes:
        - unite
      x-n2p-throttlingQuota: 1
components:
  securitySchemes:
    n2pOpenIdConnect:
      type: openIdConnect
      openIdConnectUrl: 'https://auth.net2phone.com/.well-known/openid-configuration'
  schemas:
    string-id:
      type: string
      description: Unique identifier of the resource (entity) within an account.
      example: 6gtkcdsr
      minLength: 1
      x-n2p-comment: >
        Each node kind (Unite, 4PSA, NetSapiens, etc...) can interpret the
        identifier in it's own way.

        For example, this is one recommended way to encode integer identifiers
        using Crockford's Base32 encoding:

        1. Convert integer to bytes using explicit endianness (big vs little
        endian). Make sure this is machine independent.

        2. Base32 encode the bytes and add a checksum character
        (https://www.crockford.com/base32.html).
      title: StringId
    avatar-image-kind:
      type: string
      description: Describes if the avatar image is original uploaded or resized.
      enum:
        - original
        - resized
      title: AvatarImageKind
    avatar-image:
      type: object
      required:
        - url
        - kind
      properties:
        url:
          type: string
          example: >-
            https://n2p-messaging-prod-storage.s3.us-east-1.amazonaws.com/6082ce5e436acf00018faf27-1619430611421-200px.jpg
        size_pixels:
          type: integer
          format: int32
          nullable: true
          description: >-
            The size of the image in pixels (for a resized image). Both width
            and height will be same for a resized image. It only holds value if
            the avatar image is resized.
          example: 400
        kind:
          $ref: '#/components/schemas/avatar-image-kind'
      title: AvatarImage
    avatar:
      type: object
      description: >-
        Avatar is available only for `unite` accounts. It's always null for
        `4PSA` and `netsapiens` accounts.
      nullable: true
      properties:
        user_id:
          $ref: '#/components/schemas/string-id'
        avatar_images:
          type: array
          items:
            $ref: '#/components/schemas/avatar-image'
      title: Avatar
    role-id:
      type: string
      example: Admin
      description: >-
        The unique identifier of the role. Possible values depend on "node
        kind":

        - **Unite** - `Regular`, `Admin`

        - **4PSA** - `member`, `administrator`, `owner`

        - **netsapiens** - `Basic User`, `Office Manager`, `Call Center Agent`,
        `Call Center Supervisor`, `No Portal`.
      title: RoleId
    role:
      type: object
      nullable: true
      required:
        - id
        - display_name
      properties:
        id:
          $ref: '#/components/schemas/role-id'
        display_name:
          type: string
      example:
        id: Regular
        display_name: Regular User
      title: Role
    user:
      type: object
      nullable: true
      required:
        - id
      properties:
        id:
          $ref: '#/components/schemas/string-id'
        first_name:
          type: string
          example: John
        last_name:
          type: string
          example: Doe
        email:
          type: string
          format: email
          example: john.doe@example.com
        avatar:
          $ref: '#/components/schemas/avatar'
        role:
          allOf:
            - $ref: '#/components/schemas/role'
            - x-n2p-comment: Roles are not available for RingSouth users.
      title: User
    collection-of-user:
      type: object
      required:
        - items
      properties:
        items:
          type: array
          items:
            allOf:
              - $ref: '#/components/schemas/user'
              - type: object
                nullable: false
      title: CollectionOfUser
    error:
      type: object
      description: The base type for all errors.
      required:
        - type
        - message
        - status_code
        - trace_id
      discriminator:
        propertyName: type
        mapping:
          BadRequestError: '#/components/schemas/bad-request-error'
          ValidationError: '#/components/schemas/validation-error'
          ForbiddenError: '#/components/schemas/forbidden-error'
          NotFoundError: '#/components/schemas/not-found-error'
          AuthenticationError: '#/components/schemas/authentication-error'
          NotSupportedError: '#/components/schemas/not-supported-error'
          ThrottlingError: '#/components/schemas/throttling-error'
      properties:
        type:
          type: string
          description: >-
            A discriminator field that uniquely identifies the problem type.
            Please note, that 2 responses with the same HTTP status code can
            contain errors of different type.
          nullable: false
        message:
          type: string
          description: A human-readable explanation of the problem in US English.
          nullable: false
        status_code:
          type: integer
          description: >-
            The same status code as in the HTTP response. Don't use this to
            determine the error type, use the "type" field instead.
          nullable: false
          format: int32
          minimum: 400
          maximum: 599
        trace_id:
          type: string
          description: >-
            Tracing identifier of the request. Including this in support
            requests will help to narrow down the issue.
          nullable: false
          example: 00-a52d4f52df80574c92bcdedb9abba5b0-7f70c12f16a7c44d-00
      title: Error
    bad-request-error:
      allOf:
        - $ref: '#/components/schemas/error'
      example:
        type: BadRequestError
        message: Failed to parse JSON content from the request body.
        status_code: 400
        trace_id: 00-a52d4f52df80574c92bcdedb9abba5b0-7f70c12f16a7c44d-00
      title: BadRequestError
    validation-error-code:
      type: string
      description: Machine-readable validation error code.
      nullable: true
      enum:
        - required
        - range
        - length
        - regular_expression
        - email
        - phone_number
        - null
      title: ValidationErrorCode
    validation-error-detail:
      type: object
      required:
        - message
      properties:
        field:
          type: string
          description: >-
            The optional name/path of the invalid field. The field can come as a
            path, query, header or body parameter.
          nullable: true
        message:
          type: string
          description: Human readable explanation of the error in US English.
          nullable: false
        code:
          $ref: '#/components/schemas/validation-error-code'
      title: ValidationErrorDetail
    validation-error:
      allOf:
        - $ref: '#/components/schemas/error'
        - type: object
          required:
            - details
          properties:
            details:
              type: array
              description: List of validation details.
              nullable: false
              items:
                $ref: '#/components/schemas/validation-error-detail'
      example:
        type: ValidationError
        message: The provided request contains invalid data.
        status_code: 422
        trace_id: 00-a52d4f52df80574c92bcdedb9abba5b0-7f70c12f16a7c44d-00
        details:
          - message: Something was wrong with the object provided.
          - message: '''First Name'' must not be empty.'
            code: Required
            field: first_name
      title: ValidationError
    forbidden-error:
      allOf:
        - $ref: '#/components/schemas/error'
      example:
        type: ForbiddenError
        message: The operation is blocked due to insufficient access rights.
        status_code: 403
        trace_id: 00-a52d4f52df80574c92bcdedb9abba5b0-7f70c12f16a7c44d-00
      title: ForbiddenError
    not-found-error:
      allOf:
        - $ref: '#/components/schemas/error'
      example:
        type: NotFoundError
        message: The user with id '25' was not found.
        status_code: 404
        trace_id: 00-a52d4f52df80574c92bcdedb9abba5b0-7f70c12f16a7c44d-00
      title: NotFoundError
    authentication-error:
      allOf:
        - $ref: '#/components/schemas/error'
      example:
        type: AuthenticationError
        message: The operation requires authentication but token is missing.
        status_code: 401
        trace_id: 00-a52d4f52df80574c92bcdedb9abba5b0-7f70c12f16a7c44d-00
      title: AuthenticationError
    not-supported-error:
      allOf:
        - $ref: '#/components/schemas/error'
      example:
        type: NotSupportedError
        message: >-
          The attempted operation is not supported with the current net2phone
          account type.
        status_code: 422
        trace_id: 00-a52d4f52df80574c92bcdedb9abba5b0-7f70c12f16a7c44d-00
      title: NotSupportedError
    invalid-request-error:
      discriminator:
        propertyName: type
        mapping:
          ValidationError: '#/components/schemas/validation-error'
          NotSupportedError: '#/components/schemas/not-supported-error'
      anyOf:
        - $ref: '#/components/schemas/validation-error'
        - $ref: '#/components/schemas/not-supported-error'
      title: InvalidRequestError
    webhook-event-type-id:
      type: string
      enum:
        - call_ringing
        - emergency_call
        - call_answered
        - call_pickup
        - call_completed
        - c2c_call
        - call_missed
        - call_blocked
        - call_busy
        - call_park
        - call_unpark
        - call_hold
        - call_resume
        - call_forward
        - call_blind_transfer
        - call_consultative_transfer
        - call_recorded
        - call_recording_failed
        - call_rg_queue_entered
        - call_rg_queue_tier
        - call_rg_queue_completed
        - voice_mail_received
        - voice_mail_notify
        - voice_mail_missed
        - message_received
        - call_started
      x-n2p-enum:
        name: WebhookEventType
        modelAsString: false
        values:
          - value: call_ringing
            description: >-
              This event is triggered when a call is ringing. This event will
              trigger for both inbound and outbound calls and is typically
              followed by by a `call_answered` or `call_missed` event.
            name: Call Ringing
          - value: emergency_call
            description: >-
              This event is triggered when a call is placed to an emergency
              service.
            name: Emergency Call Placed
          - value: call_answered
            description: >-
              This event is triggered when a user answers an incoming call or
              when an outgoing call is answered by the dialed number.
            name: Call Answered
          - value: call_pickup
            description: >-
              This event is triggered when a user uses `pickup` feature (by
              dialing *97{other-user-extension}) to answer call ringing on
              another user extension.
            name: Call Pickup
          - value: call_completed
            description: >-
              This event is triggered when a call (inbound/outbound) is
              completed. Doesn't matter if the call is answered/failed.
            name: Call Completed
          - value: c2c_call
            description: Provides a summary of a call triggered by the click-to-call flow.
            name: Click-To-Call Result
          - value: call_missed
            description: >-
              This event is triggered when an incoming call isn’t answered by
              any user in your net2phone account.
            name: Call Missed
          - value: call_blocked
            description: >-
              This event is triggered when you receive a call from a blocked
              (either at user level or account level) number.
            name: Call Blocked
          - value: call_busy
            description: >-
              The event is triggered when an outbound call receives a 4xx or 5xx
              error response to the INVITE indicating the call failed for some
              reason.
            name: Call Busy
          - value: call_park
            description: >-
              This event is triggered when a user parks a call in a parking slot
              by pressing `#2` from the dial-pad while he is on a call.
            name: Call Park
          - value: call_unpark
            description: >-
              This event is triggered when a user retrieves a call from a
              parking slot.
            name: Call Unpark
          - value: call_hold
            description: >-
              This event is triggered when a user (caller or callee) puts the
              call on hold.
            name: Call Hold
          - value: call_resume
            description: >-
              This event is triggered when a user (caller or callee) resumes the
              call from `hold` state.
            name: Call Resume
          - value: call_forward
            description: >-
              This event is triggered when an incoming call is forwarded to the
              number specified in the call forwarding options of a user.
            name: Call Forward
          - value: call_blind_transfer
            description: >-
              This event is triggered when a user transfer a call to another
              user/department/ring group via blind transfer (default) option.
            name: Call Blind Transfer
          - value: call_consultative_transfer
            description: >-
              This event is triggered when a user transfers a call via
              consultative transfer (also referred as warm transfer).
            name: Call Consultative Transfer
          - value: call_recorded
            description: >-
              This event is triggered when an inbound/outbound call has been
              successfully recorded.
            name: Call Recorded
          - value: call_recording_failed
            description: This event is triggered when a call failed to record.
            name: Call Recording Failed
          - value: call_rg_queue_entered
            description: >-
              This event is triggered when a call enters a ring group with call
              queue enabled.
            name: Call Ring Group Queue Entered
          - value: call_rg_queue_tier
            description: >-
              This event is triggered when a call waiting in a ring group with
              call queue enabled enters a tier which results in calls being sent
              to a user in that tier.
            name: Call Ring Group Tier Ringing
          - value: call_rg_queue_completed
            description: >-
              This event is triggered when a call in a ring group completes by
              either being answered in a tier or the caller hangs up.
            name: Call Ring Group Queue Completed
          - value: voice_mail_received
            description: >-
              This event is triggered when an incoming call is not answered by a
              user who has enabled voice mail recording, and the caller
              successfully records a voice mail.
            name: Voicemail Received
          - value: voice_mail_notify
            description: >-
              This event is triggered when a user reaches the voice mail service
              (by dialing *95) to listen/manage their unread voice mails.
            name: Voicemail Notify
          - value: voice_mail_missed
            description: >-
              This event is triggered when an incoming call is sent to a user's
              voicemail but the caller doesn't leave a voicemail. A common
              scenario for this would be the case where the callers hangs up
              before leaving a voicemail (before the beep sound).
            name: Voicemail Missed
          - value: message_received
            name: Message Received
            x-n2p-node-kinds:
              - unite
          - value: call_started
            description: >-
              This event is triggered for all calls
              (answered/unanswered/rejected etc).
            name: Call Started
      title: WebhookEventTypeId
    webhook-event-type:
      type: object
      required:
        - id
        - display_name
      properties:
        id:
          $ref: '#/components/schemas/webhook-event-type-id'
        display_name:
          type: string
      example:
        id: call_ringing
        displayName: Call Ringing
      title: WebhookEventType
    collection-of-webhook-event-type:
      type: object
      required:
        - items
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/webhook-event-type'
      title: CollectionOfWebhookEventType
    cursor-page:
      type: object
      required:
        - has_after
        - has_before
      properties:
        after:
          type: string
          nullable: true
          description: >-
            The opaque cursor pointing to the last record of the page. Set to
            `null` if the resulting collection is empty.
          example: eyJrIjoiRkM5RDhDQTktRkZCMy00REEzLTg1MEQtNkQ3Nzk5QTMzMTlFIn0=
        has_after:
          type: boolean
          description: 'If false, this is the last page of data.'
        before:
          type: string
          nullable: true
          description: >-
            The opaque cursor pointing to the first record of the page. Set to
            `null` if the resulting collection is empty.
          example: eyJrIjoiN0E2RjQ2NjYtNzNGOC00QzM4LTlDOUYtNThCRkY2NDE2QzQ4In0=
        has_before:
          type: boolean
          description: 'If false, this is the first page of data.'
      title: CursorPage
    webhook-subscription-reference:
      type: object
      required:
        - id
      properties:
        id:
          $ref: '#/components/schemas/string-id'
      title: WebhookSubscriptionReference
    webhook-subscription-owner-type:
      type: string
      description: >-
        Webhook subscriptions owned by `Account` can be edited by all admins in
        this account. Webhook subscriptions owned by `User` can only be scoped
        to this user and can be edited by the same user only.
      enum:
        - user
        - account
      title: WebhookSubscriptionOwnerType
    webhook-event-type-reference:
      type: object
      required:
        - id
      properties:
        id:
          $ref: '#/components/schemas/webhook-event-type-id'
      title: WebhookEventTypeReference
    webhook-subscription-event-type-filter-options:
      type: object
      nullable: true
      description: >-
        The event types to subscribe for. If omitted, all currently supported
        event types are assumed. If new event types are added, the subscription
        is not updated automatically to include them.
      required:
        - event_types
      properties:
        event_types:
          type: array
          items:
            $ref: '#/components/schemas/webhook-event-type-reference'
      title: WebhookSubscriptionEventTypeFilterOptions
    user-reference:
      type: object
      required:
        - id
      properties:
        id:
          $ref: '#/components/schemas/string-id'
      title: UserReference
    webhook-subscription-user-filter-options:
      type: object
      nullable: true
      description: >-
        The user accounts to subscribe for. Only events related to these users
        will be reported to the `endpointUrl`. If omitted or set to `null`, all
        users are assumed, which is only available with `ownerType` of
        `Account`. Webhook subscriptions with `ownerType` of `User` must include
        the same user in the `scopeFilter`.
      required:
        - users
      properties:
        users:
          type: array
          items:
            $ref: '#/components/schemas/user-reference'
      title: WebhookSubscriptionUserFilterOptions
    create-webhook-subscription-command:
      type: object
      required:
        - endpoint_url
        - owner_type
      properties:
        display_name:
          type: string
          description: >-
            If the value is not provided and the account type is Unite, then the
            name will be auto-generated.
          nullable: true
          minLength: 1
          maxLength: 60
          example: CRM Integration
        description:
          type: string
          nullable: true
          maxLength: 500
          example: Webhook for CRM integration
        endpoint_url:
          type: string
          description: >-
            The HTTP/HTTS URL of the endpoint to receive the POST callback once
            an event happens.
          format: uri
          example: 'https://yet-another-cool-crm.example.org'
        owner_type:
          $ref: '#/components/schemas/webhook-subscription-owner-type'
        is_enabled:
          type: boolean
          default: false
          description: >-
            A flag to enable or disable the webhook subscription. The `false`
            value is only supported on Unite accounts. The field value is
            ignored for all other account types.
        event_type_filter:
          $ref: '#/components/schemas/webhook-subscription-event-type-filter-options'
        scope_filter:
          $ref: '#/components/schemas/webhook-subscription-user-filter-options'
      title: CreateWebhookSubscriptionCommand
    created-at-time:
      type: string
      description: The creation timestamp of a resource.
      format: date-time
      nullable: true
      title: CreatedAtTime
    updated-at-time:
      type: string
      format: date-time
      description: The last update timestamp of a resource.
      nullable: true
      title: UpdatedAtTime
    timestamp-audit-fields-optional:
      type: object
      properties:
        created_at_time:
          $ref: '#/components/schemas/created-at-time'
        updated_at_time:
          $ref: '#/components/schemas/updated-at-time'
      title: TimestampAuditFieldsOptional
    user-audit-fields-optional:
      type: object
      properties:
        created_by:
          $ref: '#/components/schemas/user'
        updated_by:
          $ref: '#/components/schemas/user'
      title: UserAuditFieldsOptional
    webhook-subscription-secret:
      type: object
      nullable: true
      required:
        - webhook_subscription_id
        - secret_value
      properties:
        webhook_subscription_id:
          $ref: '#/components/schemas/string-id'
        secret_value:
          type: string
          format: password
          example: oMekrSUoBkHTh3fv7p3AKytkQqFBgrQW
      title: WebhookSubscriptionSecret
    webhook-subscription-event-type-filter:
      type: object
      nullable: true
      required:
        - event_types
      properties:
        event_types:
          type: array
          items:
            $ref: '#/components/schemas/webhook-event-type'
      title: WebhookSubscriptionEventTypeFilter
    webhook-subscription-user-filter:
      type: object
      nullable: true
      required:
        - users
      properties:
        users:
          type: array
          items:
            $ref: '#/components/schemas/user'
      title: WebhookSubscriptionUserFilter
    webhook-subscription:
      allOf:
        - $ref: '#/components/schemas/webhook-subscription-reference'
        - $ref: '#/components/schemas/create-webhook-subscription-command'
        - $ref: '#/components/schemas/timestamp-audit-fields-optional'
        - $ref: '#/components/schemas/user-audit-fields-optional'
        - type: object
          properties:
            secret:
              $ref: '#/components/schemas/webhook-subscription-secret'
            event_type_filter:
              $ref: '#/components/schemas/webhook-subscription-event-type-filter'
            scope_filter:
              $ref: '#/components/schemas/webhook-subscription-user-filter'
      title: WebhookSubscription
    cursor-page-of-webhook-subscription:
      allOf:
        - $ref: '#/components/schemas/cursor-page'
        - type: object
          required:
            - items
          properties:
            items:
              type: array
              items:
                $ref: '#/components/schemas/webhook-subscription'
      title: CursorPageOfWebhookSubscription
    extension:
      type: string
      description: Extension number of a user in the the account.
      pattern: '^[1-9]\d{3,4}$'
      example: '202'
      title: Extension
    e164-phone-number:
      type: string
      description: >-
        Phone number in E.164 international format which may include "+"
        character.
      pattern: '^\+?[1-9]\d{1,14}$'
      example: '15307636905'
      title: E164PhoneNumber
    direction:
      type: string
      enum:
        - inbound
        - outbound
      x-n2p-enum:
        name: Direction
        modelAsString: false
        values:
          - value: inbound
            name: Inbound
            description: Tells the call related to this webhook event is an incoming call.
          - value: outbound
            name: Outbound
            description: Tells the call related this webhook event is an outgoing call.
      title: Direction
    call-source:
      type: string
      enum:
        - normal
        - click2call
      x-n2p-enum:
        name: CallSource
        modelAsString: false
        values:
          - value: normal
            name: Normal
            description: >-
              Indicates the call related to this webhook event is from
              webapp/phone device.
          - value: click2call
            name: Click To Call
            description: >-
              Indicates the call related to this webhook event is trigger from
              `Click to Call` API.
      title: CallSource
    unite-user-id:
      type: integer
      description: Unique identifier of the user within an account.
      format: int32
      example: 1
      title: UniteUserId
    unite-account-id:
      type: integer
      format: int32
      description: Unique identifier of the account (tenant).
      example: 42
      title: UniteAccountId
    webhook-target-user:
      type: object
      description: Describes a user related to a webhook event.
      required:
        - id
        - account_id
        - name
      properties:
        id:
          $ref: '#/components/schemas/unite-user-id'
        name:
          type: string
          description: The full display name of the user.
          example: John Doe
        account_id:
          $ref: '#/components/schemas/unite-account-id'
      additionalProperties: false
      title: WebhookTargetUser
    webhook-target-account:
      type: object
      description: Describes an account related to a webhook event.
      required:
        - account_id
      properties:
        account_id:
          $ref: '#/components/schemas/unite-account-id'
      additionalProperties: false
      title: WebhookTargetAccount
    click-to-call-info:
      type: object
      description: >-
        This is present in a webhook event, if the call is initiated via `Click
        to Call` API.
      required:
        - c2c_api_request_id
        - c2c_client_id
      properties:
        c2c_api_request_id:
          type: string
          description: The unique id the `Click to Call` API request.
        c2c_client_id:
          type: string
          description: The client id from which the `Click to Call` is triggered.
      title: ClickToCallInfo
    webhook-event-id:
      type: string
      description: Unique ID per webhook notification.
      example: 9ebdf7fd-f310-48dd-90e6-ecfc68136886
      title: WebhookEventId
    webhook-event:
      type: object
      required:
        - id
        - event
        - timestamp
      properties:
        id:
          $ref: '#/components/schemas/webhook-event-id'
        event:
          $ref: '#/components/schemas/webhook-event-type-id'
        timestamp:
          type: string
          format: date-time
          description: Date and time when the event was triggered.
      title: WebhookEvent
    call-webhook-event:
      allOf:
        - type: object
          required:
            - originating_number
            - dialed_number
            - direction
            - call_id
            - call_source
            - user
          properties:
            originating_number:
              oneOf:
                - $ref: '#/components/schemas/extension'
                - $ref: '#/components/schemas/e164-phone-number'
              description: Describes the number that started the call.
            dialed_number:
              oneOf:
                - $ref: '#/components/schemas/extension'
                - $ref: '#/components/schemas/e164-phone-number'
              description: The recipient's number of the call.
            direction:
              $ref: '#/components/schemas/direction'
            call_id:
              type: string
              description: Unique id of the call.
              example: ce3ba63d662ff8f9455da9f954f3b472
            call_source:
              $ref: '#/components/schemas/call-source'
            user:
              description: The entity which is relevant to this webhook event.
              oneOf:
                - $ref: '#/components/schemas/webhook-target-user'
                - $ref: '#/components/schemas/webhook-target-account'
            user_name:
              type: string
              deprecated: true
              description: >-
                Is provided for backwards compatibility with previous versions
                of webhooks only. **It’s strongly suggested that you avoid using
                this field.**.
            click_to_call_info:
              $ref: '#/components/schemas/click-to-call-info'
        - $ref: '#/components/schemas/webhook-event'
      title: CallWebhookEvent
    call-answered-event:
      allOf:
        - type: object
          properties:
            event:
              type: string
              enum:
                - call_answered
        - $ref: '#/components/schemas/call-webhook-event'
      title: CallAnsweredEvent
    call-blind-transfer-event:
      allOf:
        - type: object
          properties:
            event:
              type: string
              enum:
                - call_blind_transfer
        - $ref: '#/components/schemas/call-webhook-event'
      title: CallBlindTransferEvent
    call-blocked-event:
      allOf:
        - type: object
          properties:
            event:
              type: string
              enum:
                - call_blocked
        - $ref: '#/components/schemas/call-webhook-event'
      title: CallBlockedEvent
    call-busy-event:
      allOf:
        - type: object
          properties:
            event:
              type: string
              enum:
                - call_busy
        - $ref: '#/components/schemas/call-webhook-event'
      title: CallBusyEvent
    duration:
      type: integer
      description: Length of time in `seconds` of a call.
      title: Duration
    call-completed-event:
      allOf:
        - type: object
          required:
            - duration
          properties:
            event:
              type: string
              enum:
                - call_completed
            duration:
              $ref: '#/components/schemas/duration'
            voice_mail:
              type: boolean
              description: >-
                Value `true` indicates this call has a voicemail recorded. And
                you should also have received `voicemail_received` event (if
                subscribed) for that when this is set to `true`.
        - $ref: '#/components/schemas/call-webhook-event'
      title: CallCompletedEvent
    call-consultative-transfer-event:
      allOf:
        - type: object
          required:
            - reason
          properties:
            event:
              type: string
              enum:
                - call_consultative_transfer
            reason:
              type: string
              enum:
                - transferer
                - transferee
              x-n2p-enum:
                name: Reason
                modelAsString: false
                values:
                  - value: transferer
                    name: Transferrer
                    description: Tells the transfer has been initiated by the caller.
                  - value: transferee
                    name: Transferee
                    description: Tells the transfer has been initiated by the callee.
        - $ref: '#/components/schemas/call-webhook-event'
      title: CallConsultativeTransferEvent
    call-forward-event:
      allOf:
        - type: object
          required:
            - forward_number
          properties:
            event:
              type: string
              enum:
                - call_forward
            forward_number:
              type: string
              description: The number to which the call has been forwarded to.
        - $ref: '#/components/schemas/call-webhook-event'
      title: CallForwardEvent
    call-hold-event:
      allOf:
        - type: object
          required:
            - reason
          properties:
            event:
              type: string
              enum:
                - call_hold
            reason:
              type: string
              enum:
                - holder
                - holdee
              x-n2p-enum:
                name: Reason
                modelAsString: false
                values:
                  - value: holder
                    name: Holder
                    description: Tells the hold has been initiated by the caller.
                  - value: holdee
                    name: Holdee
                    description: Tells the hold has been initiated by the callee.
        - $ref: '#/components/schemas/call-webhook-event'
      title: CallHoldEvent
    call-missed-event:
      allOf:
        - type: object
          required:
            - duration
            - reason
          properties:
            event:
              type: string
              enum:
                - call_missed
            duration:
              type: integer
              description: Always `0` for missed calls.
            reason:
              type: string
              enum:
                - user_did_not_answer
                - user_rejected_call
                - call_pickup
              x-n2p-enum:
                name: Reason
                modelAsString: false
                values:
                  - value: user_did_not_answer
                    name: User Did Not Answer
                    description: The user did not answer the call.
                  - value: user_rejected_call
                    name: User Rejected Call
                    description: The user explicitly rejected the call.
                  - value: call_pickup
                    name: Call Pickup
                    description: Another user picked the call.
        - $ref: '#/components/schemas/call-webhook-event'
      title: CallMissedEvent
    call-park-event:
      allOf:
        - type: object
          required:
            - slot
          properties:
            event:
              type: string
              enum:
                - call_park
            slot:
              type: string
              example: '2'
              description: >-
                The slot number of the parked call. You should use this slot
                number to retrive (unpark) the call later.
        - $ref: '#/components/schemas/call-webhook-event'
      title: CallParkEvent
    pickup-event-info:
      type: object
      description: Describes the user details of whose call has been picked up.
      required:
        - id
        - name
        - extension
      properties:
        id:
          type: integer
        name:
          type: string
        extension:
          type: string
      example:
        id: 986308
        name: Lazy user
        extension: '203'
      title: PickupEventInfo
    call-pickup-event:
      allOf:
        - type: object
          required:
            - pickup_event_info
          properties:
            event:
              type: string
              enum:
                - call_pickup
            pickup_event_info:
              $ref: '#/components/schemas/pickup-event-info'
        - $ref: '#/components/schemas/call-webhook-event'
      title: CallPickupEvent
    audio-message:
      type: object
      required:
        - audio_message_id
        - audio_message_url
      properties:
        audio_message_id:
          type: integer
          description: The ID of the audio message for a call recording or voicemail.
        audio_message_url:
          type: string
          format: uri
          description: Url to access the audio message of a call recording or voicemail.
      title: AudioMessage
    call-recorded-event:
      allOf:
        - type: object
          properties:
            event:
              type: string
              enum:
                - call_recorded
        - $ref: '#/components/schemas/call-webhook-event'
        - $ref: '#/components/schemas/audio-message'
      title: CallRecordedEvent
    call-recording-failed-event:
      allOf:
        - type: object
          properties:
            event:
              type: string
              enum:
                - call_recording_failed
            reason:
              type: string
              description: >-
                The reason for recording failure. The most common reason is
                `maxCallRecordings` (Maximum recordings has been hit).
        - $ref: '#/components/schemas/call-webhook-event'
      title: CallRecordingFailedEvent
    call-resume-event:
      allOf:
        - type: object
          required:
            - reason
            - hold_duration
          properties:
            event:
              type: string
              enum:
                - call_resume
            reason:
              type: string
              enum:
                - resumer
                - resumee
              x-n2p-enum:
                name: Reason
                modelAsString: false
                values:
                  - value: resumer
                    name: Resumer
                    description: Tells the call has been resumed by the caller.
                  - value: resumee
                    name: Resumee
                    description: Tells the call has been resumed by the callee.
            hold_duration:
              type: integer
              description: >-
                The number of seconds the call was on `hold` state from the last
                `call_hold` event.
        - $ref: '#/components/schemas/call-webhook-event'
      title: CallResumeEvent
    call-rg-queue-completed-event:
      allOf:
        - type: object
          properties:
            event:
              type: string
              enum:
                - call_rg_queue_completed
        - $ref: '#/components/schemas/call-webhook-event'
      title: CallRgQueueCompletedEvent
    call-rg-queue-entered-event:
      allOf:
        - type: object
          properties:
            event:
              type: string
              enum:
                - call_rg_queue_entered
        - $ref: '#/components/schemas/call-webhook-event'
      title: CallRgQueueEnteredEvent
    call-rg-queue-tier-event:
      allOf:
        - type: object
          properties:
            event:
              type: string
              enum:
                - call_rg_queue_tier
        - $ref: '#/components/schemas/call-webhook-event'
      title: CallRgQueueTierEvent
    call-ringing-event:
      allOf:
        - type: object
          properties:
            event:
              type: string
              enum:
                - call_ringing
        - $ref: '#/components/schemas/call-webhook-event'
      title: CallRingingEvent
    call-unpark-event:
      allOf:
        - type: object
          required:
            - slot
          properties:
            event:
              type: string
              enum:
                - call_unpark
            slot:
              type: string
              description: >-
                The slot number (received from `call_park` event) from which the
                call has been unparked.
        - $ref: '#/components/schemas/call-webhook-event'
      title: CallUnparkEvent
    emergency-call-event:
      allOf:
        - type: object
          properties:
            event:
              type: string
              enum:
                - emergency_call
        - $ref: '#/components/schemas/call-webhook-event'
      title: EmergencyCallEvent
    messenger-uuid:
      type: string
      minLength: 24
      maxLength: 24
      pattern: '^[0-9a-f]{24}$'
      example: 5d35f6a3fcc16b1360b1e890
      title: MessengerUuid
    conversation-id:
      allOf:
        - $ref: '#/components/schemas/messenger-uuid'
        - description: Unique identifier of the conversation.
      title: ConversationId
    conversation-event-id:
      allOf:
        - $ref: '#/components/schemas/messenger-uuid'
        - description: Unique identifier of the message.
      title: ConversationEventId
    message-type:
      type: string
      enum:
        - SMS
        - MMS
      title: MessageType
    e164-phone-number-no-plus:
      type: string
      description: >-
        Phone number in E.164 international format without a leading "+"
        character.
      pattern: '^[1-9]\d{1,14}$'
      example: '15307636905'
      title: E164PhoneNumberNoPlus
    message-origin:
      type: string
      description: >-
        Specifies the type of the sender. Currently, only `external` origin is
        supported which means some custom phone number outside of the net2phone
        account.
      enum:
        - external
      title: MessageOrigin
    message-target:
      type: string
      description: >-
        Describes the type of the entity assigned to a phone number receiving
        the message.
      enum:
        - user
        - department
        - account
      x-n2p-enum:
        name: MessageTarget
        modelAsString: false
        values:
          - value: user
            description: The phone number receiving the message belongs to a user.
            name: User
          - value: department
            description: The phone number receiving the message belongs to a department.
            name: Department
          - value: account
            description: >-
              The phone number receiving the message belongs to account. E.g.
              the number can belong to a ring group or be unassigned.
            name: Account
      title: MessageTarget
    message-content:
      type: string
      description: >-
        The content of an SMS or MMS message. Media files are included as HTTPS
        URLs and separated using ";" character.
      minLength: 1
      example: 'Leaves; https://s3.amazonaws.com/iqntmms02/bh2IwkIwUGWXzzA9Brgt.jpeg'
      title: MessageContent
    webhook-message:
      type: object
      required:
        - conversation_id
        - message_id
        - type
        - originated
        - terminated
        - origin
        - target
        - content
        - from_user_id
      properties:
        conversation_id:
          $ref: '#/components/schemas/conversation-id'
        message_id:
          $ref: '#/components/schemas/conversation-event-id'
        type:
          $ref: '#/components/schemas/message-type'
        originated:
          allOf:
            - $ref: '#/components/schemas/e164-phone-number-no-plus'
            - description: The sender's phone number.
        terminated:
          allOf:
            - $ref: '#/components/schemas/e164-phone-number-no-plus'
            - description: The receiver's phone number.
        origin:
          $ref: '#/components/schemas/message-origin'
        target:
          $ref: '#/components/schemas/message-target'
        content:
          $ref: '#/components/schemas/message-content'
        from_user_id:
          allOf:
            - $ref: '#/components/schemas/messenger-uuid'
            - description: >-
                Internal identifier of the conversation participant, including
                external phone numbers not belonging to the net2phone account.
      title: WebhookMessage
    unite-department-id:
      type: integer
      format: int32
      description: Unique identifier of the department within account.
      example: 42
      title: UniteDepartmentId
    webhook-target-department:
      type: object
      description: Describes a department related to a webhook event.
      required:
        - department_id
        - account_id
        - department
      properties:
        department_id:
          $ref: '#/components/schemas/unite-department-id'
        department:
          type: string
          description: The display name of the department.
          example: Marketing
        account_id:
          $ref: '#/components/schemas/unite-account-id'
      additionalProperties: false
      title: WebhookTargetDepartment
    message-received-event:
      allOf:
        - type: object
          required:
            - messenger_info
            - user
          properties:
            event:
              type: string
              enum:
                - message_received
            messenger_info:
              $ref: '#/components/schemas/webhook-message'
            user:
              description: The entity which is relevant to this webhook event.
              oneOf:
                - $ref: '#/components/schemas/webhook-target-user'
                - $ref: '#/components/schemas/webhook-target-department'
                - $ref: '#/components/schemas/webhook-target-account'
        - $ref: '#/components/schemas/webhook-event'
      title: MessageReceivedEvent
    voicemail-missed-event:
      allOf:
        - type: object
          properties:
            event:
              type: string
              enum:
                - voicemail_missed
            duration:
              type: integer
            reason:
              type: string
              enum:
                - caller_hungup
                - vm_disabled
                - mailbox_full
                - transcode_error
                - copy_error
              x-n2p-enum:
                name: Reason
                modelAsString: false
                values:
                  - value: caller_hungup
                    name: Caller Hungup
                    description: >-
                      The caller hungup the call before recording the voice mail
                      (before the beep sound).
                  - value: vm_disabled
                    name: VM Disabled
                    description: The voice mail feature has been disabled for the user.
                  - value: mailbox_full
                    name: Mailbox Full
                    description: The user's mail box is full.
                  - value: transcode_error
                    name: Trancode Error
                    description: There is a transcoding error occured in the platform.
                  - value: copy_error
                    name: Copy Error
                    description: Platform error.
        - $ref: '#/components/schemas/call-webhook-event'
      title: VoicemailMissedEvent
    voicemail-notify-event:
      allOf:
        - type: object
          properties:
            event:
              type: string
              enum:
                - voicemail_notify
            voicemail:
              type: boolean
        - $ref: '#/components/schemas/call-webhook-event'
      title: VoicemailNotifyEvent
    voicemail-received-event:
      allOf:
        - type: object
          required:
            - duration
            - voice_mail
          properties:
            event:
              type: string
              enum:
                - voicemail_received
            duration:
              $ref: '#/components/schemas/duration'
            voice_mail:
              type: boolean
        - $ref: '#/components/schemas/call-webhook-event'
        - $ref: '#/components/schemas/audio-message'
      title: VoicemailReceivedEvent
    update-webhook-subscription-command:
      allOf:
        - $ref: '#/components/schemas/create-webhook-subscription-command'
      title: UpdateWebhookSubscriptionCommand
    timestamp-audit-fields:
      type: object
      required:
        - created_at_time
      properties:
        created_at_time:
          allOf:
            - type: string
              nullable: false
            - $ref: '#/components/schemas/created-at-time'
        updated_at_time:
          $ref: '#/components/schemas/updated-at-time'
      title: TimestampAuditFields
    participant-id:
      type: string
      description: The unique identifier of the participant.
      example: 563cfe491ddc164f72000001
      pattern: '^[0-9a-f]{1,24}$'
      minLength: 1
      maxLength: 24
      title: ParticipantId
    sms-connection-mode:
      type: object
      required:
        - type
        - net2phone_phone_number
        - external_phone_number
      properties:
        type:
          type: string
          enum:
            - SmsConnectionMode
        net2phone_phone_number:
          $ref: '#/components/schemas/e164-phone-number-no-plus'
        external_phone_number:
          $ref: '#/components/schemas/e164-phone-number-no-plus'
      title: SmsConnectionMode
    im-connection-mode:
      type: object
      required:
        - type
      properties:
        type:
          type: string
          enum:
            - ImConnectionMode
      title: ImConnectionMode
    connection-mode:
      oneOf:
        - $ref: '#/components/schemas/sms-connection-mode'
        - $ref: '#/components/schemas/im-connection-mode'
      discriminator:
        propertyName: type
        mapping:
          SmsConnectionMode: '#/components/schemas/sms-connection-mode'
          ImConnectionMode: '#/components/schemas/im-connection-mode'
      title: ConnectionMode
    user-participant:
      type: object
      required:
        - id
        - type
        - user
      properties:
        id:
          $ref: '#/components/schemas/participant-id'
        type:
          type: string
          enum:
            - UserParticipant
        user:
          $ref: '#/components/schemas/user'
      title: UserParticipant
    guest-participant:
      type: object
      required:
        - id
        - type
        - display_name
      properties:
        id:
          $ref: '#/components/schemas/participant-id'
        type:
          type: string
          enum:
            - GuestParticipant
        display_name:
          type: string
          example: James Bond
      title: GuestParticipant
    participant:
      oneOf:
        - $ref: '#/components/schemas/user-participant'
        - $ref: '#/components/schemas/guest-participant'
      discriminator:
        propertyName: type
        mapping:
          UserParticipant: '#/components/schemas/user-participant'
          GuestParticipant: '#/components/schemas/guest-participant'
      title: Participant
    conversation:
      allOf:
        - $ref: '#/components/schemas/timestamp-audit-fields'
        - type: object
          properties:
            id:
              $ref: '#/components/schemas/conversation-id'
            created_by_participant_id:
              $ref: '#/components/schemas/participant-id'
            connection_mode:
              $ref: '#/components/schemas/connection-mode'
            participants:
              type: array
              items:
                $ref: '#/components/schemas/participant'
          required:
            - id
            - created_by_participant_id
            - participants
      title: Conversation
    cursor-page-of-conversation:
      allOf:
        - $ref: '#/components/schemas/cursor-page'
        - type: object
          required:
            - items
          properties:
            items:
              type: array
              items:
                $ref: '#/components/schemas/conversation'
      title: CursorPageOfConversation
    text-message-content:
      type: string
      description: The content of an SMS message.
      minLength: 1
      example: 'Hello, world!'
      title: TextMessageContent
    create-message-command:
      type: object
      properties:
        content:
          $ref: '#/components/schemas/text-message-content'
      required:
        - content
      title: CreateMessageCommand
    phone-number-contact-method:
      type: object
      required:
        - type
        - phone_number
      properties:
        type:
          type: string
          enum:
            - PhoneNumberContactMethod
        phone_number:
          $ref: '#/components/schemas/e164-phone-number-no-plus'
      title: PhoneNumberContactMethod
    phone-extension-contact-method:
      type: object
      required:
        - type
        - extension
      properties:
        type:
          type: string
          enum:
            - PhoneExtensionContactMethod
        extension:
          $ref: '#/components/schemas/phone-extension'
      title: PhoneExtensionContactMethod
    phone-extension:
      type: string
      pattern: '^[1-9]\d{2,3}$'
      example: '1415'
      title: PhoneExtension
    contact-method:
      oneOf:
        - $ref: '#/components/schemas/phone-number-contact-method'
        - $ref: '#/components/schemas/phone-extension-contact-method'
      discriminator:
        propertyName: type
        mapping:
          PhoneNumberContactMethod: '#/components/schemas/phone-number-contact-method'
          PhoneExtensionContactMethod: '#/components/schemas/phone-extension-contact-method'
      title: ContactMethod
    create-conversation-from-message-command:
      allOf:
        - $ref: '#/components/schemas/create-message-command'
        - type: object
          properties:
            recipient_contact_method:
              $ref: '#/components/schemas/contact-method'
          required:
            - recipient_contact_method
      title: CreateConversationFromMessageCommand
    conversation-event-base:
      type: object
      properties:
        id:
          $ref: '#/components/schemas/conversation-event-id'
        created_at_time:
          $ref: '#/components/schemas/created-at-time'
      required:
        - id
        - created_at_time
      title: ConversationEventBase
    message-conversation-event:
      allOf:
        - $ref: '#/components/schemas/conversation-event-base'
        - type: object
          properties:
            type:
              enum:
                - MessageConversationEvent
              type: string
            conversation_id:
              $ref: '#/components/schemas/conversation-id'
            sender_participant_id:
              $ref: '#/components/schemas/participant-id'
            content:
              $ref: '#/components/schemas/text-message-content'
          required:
            - type
            - conversation_id
            - sender_participant_id
            - content
      title: MessageConversationEvent
    conversation-event:
      oneOf:
        - $ref: '#/components/schemas/message-conversation-event'
      discriminator:
        propertyName: type
        mapping:
          MessageConversationEvent: '#/components/schemas/message-conversation-event'
      title: ConversationEvent
    cursor-page-of-conversation-event:
      allOf:
        - $ref: '#/components/schemas/cursor-page'
        - type: object
          required:
            - items
          properties:
            items:
              type: array
              items:
                $ref: '#/components/schemas/conversation-event'
      title: CursorPageOfConversationEvent
    call-queue-id:
      example: '10293993'
      description: Unique call queue id within a net2phone account.
      allOf:
        - $ref: '#/components/schemas/string-id'
      title: CallQueueId
    call-queue-reference:
      type: object
      required:
        - id
      properties:
        id:
          $ref: '#/components/schemas/call-queue-id'
      title: CallQueueReference
    call-queue-ring-strategy-type:
      type: string
      description: Call queue ring strategy.
      enum:
        - ring_all
      x-n2p-enum:
        name: CallQueueRingStrategy
        modelAsString: false
        values:
          - value: ring_all
            description: Ring all agents at the same time.
            name: Ring All
      title: CallQueueRingStrategyType
    call-queue-ring-strategy:
      type: object
      description: Call queue ring strategy settings.
      properties:
        type:
          $ref: '#/components/schemas/call-queue-ring-strategy-type'
      required:
        - type
      title: CallQueueRingStrategy
    call-queue-common:
      type: object
      properties:
        display_name:
          type: string
          example: Sales Queue
          minLength: 1
          maxLength: 100
        extension:
          $ref: '#/components/schemas/phone-extension'
        max_capacity:
          type: integer
          description: Maximum number of agents.
          minimum: 1
          maximum: 250
        max_wait_time_seconds:
          type: integer
          description: Maximum waiting time in queue.
          minimum: 1
          maximum: 1800
        ring_strategy:
          $ref: '#/components/schemas/call-queue-ring-strategy'
      required:
        - display_name
        - extension
        - max_capacity
        - max_wait_time_seconds
        - ring_strategy
      title: CallQueueCommon
    user-audit-fields:
      type: object
      properties:
        created_by:
          allOf:
            - type: object
              nullable: false
            - $ref: '#/components/schemas/user'
        updated_by:
          $ref: '#/components/schemas/user'
      required:
        - created_by
      title: UserAuditFields
    call-queue:
      allOf:
        - $ref: '#/components/schemas/call-queue-reference'
        - $ref: '#/components/schemas/call-queue-common'
        - type: object
          properties:
            agents_count:
              type: integer
          required:
            - agents_count
        - $ref: '#/components/schemas/timestamp-audit-fields'
        - $ref: '#/components/schemas/user-audit-fields'
      title: CallQueue
    cursor-page-of-call-queue:
      allOf:
        - $ref: '#/components/schemas/cursor-page'
        - type: object
          required:
            - items
          properties:
            items:
              type: array
              items:
                $ref: '#/components/schemas/call-queue'
      title: CursorPageOfCallQueue
    call-queue-agent:
      allOf:
        - type: object
          properties:
            logged_in:
              type: boolean
            user:
              $ref: '#/components/schemas/user-reference'
          required:
            - logged_in
            - user
      title: CallQueueAgent
    call-queue-failover-action:
      type: object
      discriminator:
        propertyName: type
        mapping:
          none: '#/components/schemas/call-queue-failover-action-none'
          forward: '#/components/schemas/call-queue-failover-action-forward'
          hangup: '#/components/schemas/call-queue-failover-action-hangup'
      properties:
        type:
          $ref: '#/components/schemas/call-queue-failover-action-type'
      required:
        - type
      title: CallQueueFailoverAction
    call-queue-failover-action-none:
      allOf:
        - $ref: '#/components/schemas/call-queue-failover-action'
      example:
        type: none
      title: CallQueueFailoverActionNone
    call-queue-failover-destination:
      type: object
      discriminator:
        propertyName: type
        mapping:
          user: '#/components/schemas/call-queue-failover-destination-with-voicemail'
          welcome_menu: '#/components/schemas/call-queue-failover-destination'
          call_queue: '#/components/schemas/call-queue-failover-destination'
          department: '#/components/schemas/call-queue-failover-destination-with-voicemail'
          ring_group: '#/components/schemas/call-queue-failover-destination'
      properties:
        id:
          $ref: '#/components/schemas/string-id'
        type:
          $ref: '#/components/schemas/call-queue-failover-destination-type'
      required:
        - id
        - type
      title: CallQueueFailoverDestination
    call-queue-failover-destination-with-voicemail:
      allOf:
        - $ref: '#/components/schemas/call-queue-failover-destination'
        - type: object
          properties:
            voicemail:
              type: boolean
              description: Forward to voicemail.
              default: false
      title: CallQueueFailoverDestinationWithVoicemail
    call-queue-failover-destination-type:
      type: string
      description: Call queue failover destination type.
      enum:
        - user
        - welcome_menu
        - call_queue
        - department
        - ring_group
      x-n2p-enum:
        name: CallQueueFailoverDestinationType
        modelAsString: false
        values:
          - value: user
            description: Failover to user.
            name: User
          - value: welcome_menu
            description: Failover to welcome menu.
            name: Welcome Menu
          - value: call_queue
            description: Failover to another call queue.
            name: Call Queue
          - value: department
            description: Failover to department
            name: Department
          - value: ring_group
            description: Failover to ring group
            name: Ring Group
      title: CallQueueFailoverDestinationType
    call-queue-failover-action-forward:
      allOf:
        - $ref: '#/components/schemas/call-queue-failover-action'
        - type: object
          required:
            - destination
          properties:
            destination:
              $ref: '#/components/schemas/call-queue-failover-destination'
      example:
        type: forward
        destination:
          id: '124180841'
          type: user
      title: CallQueueFailoverActionForward
    call-queue-failover-action-hangup:
      allOf:
        - $ref: '#/components/schemas/call-queue-failover-action'
      example:
        type: hangup
      title: CallQueueFailoverActionHangup
    call-queue-failover-action-type:
      type: string
      description: Call queue failover action.
      enum:
        - none
        - forward
        - hangup
      x-n2p-enum:
        name: CallQueueFailoverAction
        modelAsString: false
        values:
          - value: none
            description: Do nothing.
            name: None
          - value: forward
            description: Forward call.
            name: Forward
          - value: hangup
            description: Hangup call.
            name: Hangup
      title: CallQueueFailoverActionType
    create-call-queue-command:
      allOf:
        - $ref: '#/components/schemas/call-queue-common'
        - type: object
          properties:
            agents:
              type: array
              items:
                $ref: '#/components/schemas/call-queue-agent'
            failover_action:
              allOf:
                - $ref: '#/components/schemas/call-queue-failover-action'
                - description: >-
                    Action to perform when queue reached its max capacity or max
                    waiting time. No action by default.
            no_agents_action:
              allOf:
                - $ref: '#/components/schemas/call-queue-failover-action'
                - description: >-
                    Action to perform when no agents logged in. No action by
                    default.
      title: CreateCallQueueCommand
    call-queue-agent-details:
      allOf:
        - type: object
          properties:
            user:
              $ref: '#/components/schemas/user'
        - $ref: '#/components/schemas/call-queue-agent'
      title: CallQueueAgentDetails
    call-queue-details:
      allOf:
        - $ref: '#/components/schemas/call-queue'
        - type: object
          properties:
            agents:
              type: array
              items:
                $ref: '#/components/schemas/call-queue-agent-details'
            failover_action:
              allOf:
                - $ref: '#/components/schemas/call-queue-failover-action'
                - description: >-
                    Action to perform when queue reached its max capacity or max
                    waiting time.
            no_agents_action:
              allOf:
                - $ref: '#/components/schemas/call-queue-failover-action'
                - description: Action to perform when no agents logged in.
          required:
            - agents
            - failover_action
            - no_agents_action
      title: CallQueueDetails
    create-audio-command:
      type: object
      required:
        - audio_file
      properties:
        audio_file:
          type: string
          format: binary
      title: CreateAudioCommand
    audio:
      type: object
      properties:
        url:
          type: string
        key:
          type: string
      title: Audio
    throttling-error:
      title: ThrottlingError
      allOf:
        - $ref: '#/components/schemas/error'
        - type: object
          required:
            - details
          properties:
            details:
              title: RateLimitErrorDetail
              type: object
              required:
                - limit_time_window_seconds
                - limit_quota_units
                - remaining_quota_units
                - reset_seconds
                - operation_quota_units
              properties:
                limit_time_window_seconds:
                  type: integer
                  description: The width of the throttling time window in seconds.
                  minimum: 1
                limit_quota_units:
                  type: integer
                  description: >-
                    The number of request units to spend for your net2phone
                    account in each time window.
                  minimum: 1
                remaining_quota_units:
                  type: integer
                  description: >-
                    The number of request units left for your net2phone account
                    in the current time window.
                  minimum: 0
                reset_seconds:
                  type: integer
                  description: >-
                    Indicates the number of seconds until the request quota
                    resets.
                  minimum: 1
                operation_quota_units:
                  type: integer
                  description: The price of the attempted operation in quota units.
                  minimum: 1
      example:
        type: ThrottlingError
        message: >-
          The request quota for your account was exhausted. Please wait at least
          10 seconds before making a new request.
        status_code: 429
        trace_id: 00-a52d4f52df80574c92bcdedb9abba5b0-7f70c12f16a7c44d-00
        details:
          limit_time_window_seconds: 60
          limit_quota_units: 100
          remaining_quota_units: 99
          reset_seconds: 30
          operation_quota_units: 1
  headers:
    n2p-response-type:
      description: >-
        The type of the response schema in the body. It can be useful to
        distinguish between different response types before parsing the body.
      schema:
        type: string
    rate-limit-limit:
      description: >-
        Indicates the request quota associated to the net2phone account in the
        current time window. The format of the header value is based on
        [RateLimit Header Fields for
        HTTP](https://datatracker.ietf.org/doc/html/draft-polli-ratelimit-headers-05#section-3.1)
        IETF standard.
      schema:
        type: string
        example: '100, 100;w=60'
    rate-limit-remaining:
      description: Indicates the remaining quota units for the current net2phone account.
      schema:
        type: integer
        minimum: 0
        example: 1
    rate-limit-reset:
      description: Indicates the number of seconds until the request quota resets.
      schema:
        type: integer
        minimum: 0
        example: 30
  responses:
    authentication-error:
      description: 'The authentication token is missing, expired or invalid.'
      headers:
        N2P-Response-Type:
          $ref: '#/components/headers/n2p-response-type'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/authentication-error'
    invalid-request-error:
      description: >-
        The provided request is semantically invalid or not supported on this
        account.
      headers:
        N2P-Response-Type:
          $ref: '#/components/headers/n2p-response-type'
        RateLimit-Limit:
          $ref: '#/components/headers/rate-limit-limit'
        RateLimit-Remaining:
          $ref: '#/components/headers/rate-limit-remaining'
        RateLimit-Reset:
          $ref: '#/components/headers/rate-limit-reset'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/invalid-request-error'
    not-supported-error:
      description: The operation is not supported with the current net2phone account type.
      headers:
        N2P-Response-Type:
          $ref: '#/components/headers/n2p-response-type'
        RateLimit-Limit:
          $ref: '#/components/headers/rate-limit-limit'
        RateLimit-Remaining:
          $ref: '#/components/headers/rate-limit-remaining'
        RateLimit-Reset:
          $ref: '#/components/headers/rate-limit-reset'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/not-supported-error'
    bad-request-error:
      description: The request is malformed (e.g. includes invalid JSON).
      headers:
        N2P-Response-Type:
          $ref: '#/components/headers/n2p-response-type'
        RateLimit-Limit:
          $ref: '#/components/headers/rate-limit-limit'
        RateLimit-Remaining:
          $ref: '#/components/headers/rate-limit-remaining'
        RateLimit-Reset:
          $ref: '#/components/headers/rate-limit-reset'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/bad-request-error'
    forbidden-error:
      description: The operation is blocked due to insufficient access rights.
      headers:
        N2P-Response-Type:
          $ref: '#/components/headers/n2p-response-type'
        RateLimit-Limit:
          $ref: '#/components/headers/rate-limit-limit'
        RateLimit-Remaining:
          $ref: '#/components/headers/rate-limit-remaining'
        RateLimit-Reset:
          $ref: '#/components/headers/rate-limit-reset'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/forbidden-error'
    not-found-error:
      description: The requested resource is not found.
      headers:
        N2P-Response-Type:
          $ref: '#/components/headers/n2p-response-type'
        RateLimit-Limit:
          $ref: '#/components/headers/rate-limit-limit'
        RateLimit-Remaining:
          $ref: '#/components/headers/rate-limit-remaining'
        RateLimit-Reset:
          $ref: '#/components/headers/rate-limit-reset'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/not-found-error'
    throttling-error:
      description: The request quota for your net2phone account was exhausted.
      headers:
        N2P-Response-Type:
          $ref: '#/components/headers/n2p-response-type'
        RateLimit-Limit:
          $ref: '#/components/headers/rate-limit-limit'
        RateLimit-Remaining:
          $ref: '#/components/headers/rate-limit-remaining'
        RateLimit-Reset:
          $ref: '#/components/headers/rate-limit-reset'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/throttling-error'
  parameters:
    limit:
      name: limit
      in: query
      description: Number of items per page.
      schema:
        type: integer
        format: int32
        default: 10
        minimum: 1
        maximum: 100
    before:
      name: before
      in: query
      description: >-
        The opaque cursor to paginate backwards. Cannot be used together with
        `after`.
      schema:
        type: string
        example: eyJrIjoiRkM5RDhDQTktRkZCMy00REEzLTg1MEQtNkQ3Nzk5QTMzMTlFIn0=
    after:
      name: after
      in: query
      description: >-
        The opaque cursor to paginate forwards. Cannot be used together with
        `before`.
      schema:
        type: string
        example: eyJrIjoiRkM5RDhDQTktRkZCMy00REEzLTg1MEQtNkQ3Nzk5QTMzMTlFIn0=
    webhook-signature:
      name: x-net2phone-signature
      in: header
      required: false
      x-n2p-accountBackendTypes:
        - unite
      description: >-
        Used to make sure the webhook request is authentic and comes from
        net2phone. To validate the signature:

        1. Retrieve the raw body of the webhook request.

        2. Concatentate two parts using the `:` character. The resulting string
        should looke like `{signature}:{raw_body}`.

        3. Compute the HMAC-SHA256 hash from the given string. Use the
        `x-net2phone-timestamp` header as the key. All "string to bytes"
        conversions should be performed using UTF-8 encoding.

        4. Convert the resulting HMAC-SHA256 hash bytes back to a string using
        HEX encoding (without `-` characters).

        5. Compare the resulting string with the value present in the
        `x-net2phone-signature` header. If they are equal, the request is
        authentic.


        See [support
        article](https://support.net2phone.com/s/article/Securing-net2phone-webhook-requests-to-your-application)
        for more information.
      schema:
        type: string
        example: fe4aad021345e9c6506e163ba62aea8a0f15047712618482a2423cc008dd2fb2
    webhook-timestamp:
      name: x-net2phone-timestamp
      in: header
      required: false
      description: >-
        The timestamp of the request. Used to validate the authenticity of the
        webhook request in combination with `x-net2phone-signature` header.
      x-n2p-accountBackendTypes:
        - unite
      schema:
        type: string
        format: date-time
        example: 2021-09-17T09:13:08.912Z
    webhook-subscription-id:
      name: webhook_subscription_id
      in: path
      required: true
      description: The unique id of the webhook subscription within account.
      schema:
        $ref: '#/components/schemas/string-id'
    conversation-id:
      name: conversation_id
      in: path
      required: true
      description: The unique id of the conversation.
      schema:
        $ref: '#/components/schemas/conversation-id'
    event-id:
      name: event_id
      in: path
      required: true
      description: Unique identifier of the event.
      schema:
        $ref: '#/components/schemas/conversation-event-id'
    call-queue-id:
      name: call_queue_id
      in: path
      required: true
      description: The unique id of the call queue within account.
      schema:
        $ref: '#/components/schemas/string-id'
      example: '10293993'
    audio-key:
      name: audio_key
      in: path
      required: true
      description: The unique key for audio file.
      schema:
        $ref: '#/components/schemas/string-id'
      example: c4aac21b-542c-4707-814e-8fad5b9b939b
  examples:
    unite-webhook-subscription-request:
      summary: User-scoped webhook in Unite account.
      x-n2p-accountBackendTypes:
        - unite
      value:
        display_name: User-scoped Webhook for CRM
        description: Webhook for CRM integration for a specific user.
        endpoint_url: 'https://yet-another-cool-crm.example.org'
        owner_type: user
        is_enabled: true
        event_type_filter:
          event_types:
            - id: call_ringing
            - id: call_missed
            - id: call_completed
        scope_filter:
          users:
            - id: 6gtkcdsr
    4psa-webhook-subscription-request:
      summary: User-scoped webhook in 4PSA account.
      x-n2p-accountBackendTypes:
        - 4psa
      value:
        endpoint_url: 'https://yet-another-cool-crm.example.org'
        owner_type: user
        event_type_filter:
          event_types:
            - id: call_ringing
            - id: call_missed
            - id: call_completed
        scope_filter:
          users:
            - id: 6gtkcdsr
    netsapiens-webhook-subscription-request:
      summary: User-scoped webhook in NetSapiens account.
      x-n2p-accountBackendTypes:
        - netsapiens
      value:
        endpoint_url: 'https://yet-another-cool-crm.example.org'
        owner_type: user
        event_type_filter:
          event_types:
            - id: call_ringing
            - id: call_missed
            - id: call_completed
        scope_filter:
          users:
            - id: 6gtkcdsr
    unite-webhook-subscription-response:
      summary: User-scoped webhook in Unite account.
      x-n2p-accountBackendTypes:
        - unite
      value:
        id: 6gtkcdsr
        display_name: User-scoped Webhook for CRM
        description: Webhook for CRM integration for a specific user.
        endpoint_url: 'https://yet-another-cool-crm.example.org'
        owner_type: user
        is_enabled: true
        event_type_filter:
          event_types:
            - id: call_ringing
              display_name: Call Ringing
            - id: call_missed
              display_name: Call Missed
            - id: call_completed
              display_name: Call Completed
        scope_filter:
          users:
            - id: 6gtkcdsr
              first_name: John
              last_name: Doe
              email: john.doe@example.com
              avatar:
                user_id: 6gtkcdsr
                avatar_images:
                  - url: >-
                      https://n2p-messaging-prod-storage.s3.us-east-1.amazonaws.com/6082ce5e436acf00018faf27-1619430611421-200px.jpg
                    size_pixels: 400
                    kind: original
              role:
                id: Regular
                display_name: Regular User
        created_at_time: '2019-08-24T14:15:22Z'
        updated_at_time: null
        created_by:
          id: 6gtkcdsr
          first_name: John
          last_name: Doe
          email: john.doe@example.com
          avatar:
            user_id: 6gtkcdsr
            avatar_images:
              - url: >-
                  https://n2p-messaging-prod-storage.s3.us-east-1.amazonaws.com/6082ce5e436acf00018faf27-1619430611421-200px.jpg
                size_pixels: 400
                kind: original
          role:
            id: Regular
            display_name: Regular User
        updated_by: null
        secret:
          webhook_subscription_id: 6gtkcdsr
          secret_value: oMekrSUoBkHTh3fv7p3AKytkQqFBgrQW
    netsapiens-webhook-subscription-response:
      summary: User-scoped webhook in NetSapiens account.
      x-n2p-accountBackendTypes:
        - netsapiens
      value:
        id: 6gtkcdsr
        endpoint_url: 'https://yet-another-cool-crm.example.org'
        owner_type: user
        event_type_filter:
          event_types:
            - id: call_ringing
              display_name: Call Ringing
            - id: call_missed
              display_name: Call Missed
            - id: call_completed
              display_name: Call Completed
        scope_filter:
          users:
            - id: 6gtkcdsr
              first_name: John
              last_name: Doe
              email: john.doe@example.com
              role:
                id: Basic User
                display_name: Basic User
    4psa-webhook-subscription-response:
      summary: User-scoped webhook in 4PSA account.
      x-n2p-accountBackendTypes:
        - 4psa
      value:
        id: 6gtkcdsr
        endpoint_url: 'https://yet-another-cool-crm.example.org'
        owner_type: user
        event_type_filter:
          event_types:
            - id: call_ringing
              display_name: Call Ringing
            - id: call_missed
              display_name: Call Missed
            - id: call_completed
              display_name: Call Completed
        scope_filter:
          users:
            - id: 6gtkcdsr
              first_name: John
              last_name: Doe
              email: john.doe@example.com
              role:
                id: member
                display_name: member
    mms-to-user:
      summary: MMS from external phone number to a phone number assigned to a User.
      value:
        id: 41e8de4c-806c-4be4-835b-a216a9b4b8e6
        event: message_received
        timestamp: '2021-09-17T09:10:03.67Z'
        user:
          id: 1
          name: John Doe
          account_id: 42
        messenger_info:
          message_id: 61445b6b471db5000112c892
          conversation_id: 61445b1cf2f38a00015540c1
          type: MMS
          originated: '15307636905'
          terminated: '15168660248'
          origin: external
          target: user
          content: >-
            Look at the picture!;
            https://s3.amazonaws.com/iqntmms02/bh2IwkLwAGWXzzA9Brgt.jpeg
          from_user_id: 61435642343f430001253bfc
    sms-to-department:
      summary: >-
        SMS from external phone number to a phone number assigned to a
        Department.
      value:
        id: 44a2f437-58da-4dd0-8204-cf5e000eb659
        event: message_received
        timestamp: '2021-09-17T09:02:45.78Z'
        user:
          account_id: 1
          department: Marketing
          department_id: 2
        messenger_info:
          message_id: 614459b5471db5000112c87d
          conversation_id: 6144597d471db5000112c877
          type: SMS
          originated: '15307636905'
          terminated: '15168560339'
          origin: external
          target: department
          content: 'Hello, there!'
          from_user_id: 61435642343f430001253bfc
  callbacks:
    call-answered:
      '{$request.body#/endpoint_url}':
        post:
          operationId: NotifyCallAnswered
          description: >-
            This event is triggered when a user answers an incoming call or when
            an outgoing call is answered by the dialed number.
          parameters:
            - $ref: '#/components/parameters/webhook-signature'
            - $ref: '#/components/parameters/webhook-timestamp'
          requestBody:
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/call-answered-event'
          responses:
            default:
              description: >-
                The response of the webhook endpoint is discarded, webhook
                requests are never retried.
          summary: Notify call answered
          x-n2p-accountBackendTypes:
            - unite
    call-blind-transfer:
      '{$request.body#/endpoint_url}':
        post:
          operationId: NotifyCallBlindTransfer
          description: >-
            This event is triggered when a user transfer a call to another
            user/department/ring group via blind transfer (default) option.
          parameters:
            - $ref: '#/components/parameters/webhook-signature'
            - $ref: '#/components/parameters/webhook-timestamp'
          requestBody:
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/call-blind-transfer-event'
          responses:
            default:
              description: >-
                The response of the webhook endpoint is discarded, webhook
                requests are never retried.
          summary: Notify call blind transfer
          x-n2p-accountBackendTypes:
            - unite
    call-blocked:
      '{$request.body#/endpoint_url}':
        post:
          operationId: NotifyCallBlocked
          description: >-
            This event is triggered when you receive a call from a blocked
            (either at user level or account level) number.
          parameters:
            - $ref: '#/components/parameters/webhook-signature'
            - $ref: '#/components/parameters/webhook-timestamp'
          requestBody:
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/call-blocked-event'
          responses:
            default:
              description: >-
                The response of the webhook endpoint is discarded, webhook
                requests are never retried.
          summary: Notify call blocked
          x-n2p-accountBackendTypes:
            - unite
    call-busy:
      '{$request.body#/endpoint_url}':
        post:
          operationId: NotifyCallBusy
          description: >-
            The event is triggered when an outbound call receives a 4xx or 5xx
            error response to the INVITE indicating the call failed for some
            reason.
          parameters:
            - $ref: '#/components/parameters/webhook-signature'
            - $ref: '#/components/parameters/webhook-timestamp'
          requestBody:
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/call-busy-event'
          responses:
            default:
              description: >-
                The response of the webhook endpoint is discarded, webhook
                requests are never retried.
          summary: Notify call busy
          x-n2p-accountBackendTypes:
            - unite
    call-completed:
      '{$request.body#/endpoint_url}':
        post:
          operationId: NotifyCallCompleted
          description: >-
            This event is triggered when a call (inbound/outbound) is completed.
            Doesn't matter if the call is answered/failed.
          parameters:
            - $ref: '#/components/parameters/webhook-signature'
            - $ref: '#/components/parameters/webhook-timestamp'
          requestBody:
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/call-completed-event'
          responses:
            default:
              description: >-
                The response of the webhook endpoint is discarded, webhook
                requests are never retried.
          summary: Notify call completed
          x-n2p-accountBackendTypes:
            - unite
    call-consultative-transfer:
      '{$request.body#/endpoint_url}':
        post:
          operationId: NotifyCallConsultativeTransfer
          description: >-
            This event is triggered when a user transfers a call via
            consultative transfer (also referred as warm transfer).
          parameters:
            - $ref: '#/components/parameters/webhook-signature'
            - $ref: '#/components/parameters/webhook-timestamp'
          requestBody:
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/call-consultative-transfer-event'
          responses:
            default:
              description: >-
                The response of the webhook endpoint is discarded, webhook
                requests are never retried.
          summary: Notify call consultative transfer
          x-n2p-accountBackendTypes:
            - unite
    call-forward:
      '{$request.body#/endpoint_url}':
        post:
          operationId: NotifyCallForward
          description: >-
            This event is triggered when an incoming call is forwarded to the
            number specified in the call forwarding options of a user.
          parameters:
            - $ref: '#/components/parameters/webhook-signature'
            - $ref: '#/components/parameters/webhook-timestamp'
          requestBody:
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/call-forward-event'
          responses:
            default:
              description: >-
                The response of the webhook endpoint is discarded, webhook
                requests are never retried.
          summary: Notify call forward
          x-n2p-accountBackendTypes:
            - unite
    call-hold:
      '{$request.body#/endpoint_url}':
        post:
          operationId: NotifyCallHold
          description: >-
            This event is triggered when a user (caller or callee) puts the call
            on hold.
          parameters:
            - $ref: '#/components/parameters/webhook-signature'
            - $ref: '#/components/parameters/webhook-timestamp'
          requestBody:
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/call-hold-event'
          responses:
            default:
              description: >-
                The response of the webhook endpoint is discarded, webhook
                requests are never retried.
          summary: Notify call hold
          x-n2p-accountBackendTypes:
            - unite
    call-missed:
      '{$request.body#/endpoint_url}':
        post:
          operationId: NotifyCallMissed
          description: >-
            This event is triggered when an incoming call isn’t answered by any
            user in your net2phone account.
          parameters:
            - $ref: '#/components/parameters/webhook-signature'
            - $ref: '#/components/parameters/webhook-timestamp'
          requestBody:
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/call-missed-event'
          responses:
            default:
              description: >-
                The response of the webhook endpoint is discarded, webhook
                requests are never retried.
          summary: Notify call missed
          x-n2p-accountBackendTypes:
            - unite
    call-park:
      '{$request.body#/endpoint_url}':
        post:
          operationId: NotifyCallPark
          description: >-
            This event is triggered when a user parks a call in a parking slot
            by pressing `#2` from the dial-pad while he is on a call.
          parameters:
            - $ref: '#/components/parameters/webhook-signature'
            - $ref: '#/components/parameters/webhook-timestamp'
          requestBody:
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/call-park-event'
          responses:
            default:
              description: >-
                The response of the webhook endpoint is discarded, webhook
                requests are never retried.
          summary: Notify call park
          x-n2p-accountBackendTypes:
            - unite
    call-pickup:
      '{$request.body#/endpoint_url}':
        post:
          operationId: NotifyCallPickup
          description: >-
            This event is triggered when a user uses `pickup` feature (by
            dialing *97{other-user-extension}) to answer call ringing on another
            user extension.
          parameters:
            - $ref: '#/components/parameters/webhook-signature'
            - $ref: '#/components/parameters/webhook-timestamp'
          requestBody:
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/call-pickup-event'
          responses:
            default:
              description: >-
                The response of the webhook endpoint is discarded, webhook
                requests are never retried.
          summary: Notify call pickup
          x-n2p-accountBackendTypes:
            - unite
    call-recorded:
      '{$request.body#/endpoint_url}':
        post:
          operationId: NotifyCallRecorded
          description: >-
            This event is triggered when an inbound/outbound call has been
            successfully recorded.
          parameters:
            - $ref: '#/components/parameters/webhook-signature'
            - $ref: '#/components/parameters/webhook-timestamp'
          requestBody:
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/call-recorded-event'
          responses:
            default:
              description: >-
                The response of the webhook endpoint is discarded, webhook
                requests are never retried.
          summary: Notify call recorded
          x-n2p-accountBackendTypes:
            - unite
    call-recording-failed:
      '{$request.body#/endpoint_url}':
        post:
          operationId: NotifyCallRecordingFailed
          description: This event is triggered when a call failed to record.
          parameters:
            - $ref: '#/components/parameters/webhook-signature'
            - $ref: '#/components/parameters/webhook-timestamp'
          requestBody:
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/call-recording-failed-event'
          responses:
            default:
              description: >-
                The response of the webhook endpoint is discarded, webhook
                requests are never retried.
          summary: Notify call recording failed
          x-n2p-accountBackendTypes:
            - unite
    call-resume:
      '{$request.body#/endpoint_url}':
        post:
          operationId: NotifyCallResume
          description: >-
            This event is triggered when a user (caller or callee) resumes the
            call from `hold` state.
          parameters:
            - $ref: '#/components/parameters/webhook-signature'
            - $ref: '#/components/parameters/webhook-timestamp'
          requestBody:
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/call-resume-event'
          responses:
            default:
              description: >-
                The response of the webhook endpoint is discarded, webhook
                requests are never retried.
          summary: Notify call resume
          x-n2p-accountBackendTypes:
            - unite
    call-rg-queue-completed:
      '{$request.body#/endpoint_url}':
        post:
          operationId: NotifyCallRgQueueCompleted
          description: >-
            This event is triggered when a call in a ring group completes by
            either being answered in a tier or the caller hangs up.
          parameters:
            - $ref: '#/components/parameters/webhook-signature'
            - $ref: '#/components/parameters/webhook-timestamp'
          requestBody:
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/call-rg-queue-completed-event'
          responses:
            default:
              description: >-
                The response of the webhook endpoint is discarded, webhook
                requests are never retried.
          summary: Notify call rg queue completed
          x-n2p-accountBackendTypes:
            - unite
    call-rg-queue-entered:
      '{$request.body#/endpoint_url}':
        post:
          operationId: NotifyCallRgQueueEntered
          description: >-
            This event is triggered when a call enters a ring group with call
            queue enabled.
          parameters:
            - $ref: '#/components/parameters/webhook-signature'
            - $ref: '#/components/parameters/webhook-timestamp'
          requestBody:
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/call-rg-queue-entered-event'
          responses:
            default:
              description: >-
                The response of the webhook endpoint is discarded, webhook
                requests are never retried.
          summary: Notify call rg queue entered
          x-n2p-accountBackendTypes:
            - unite
    call-rg-queue-tier:
      '{$request.body#/endpoint_url}':
        post:
          operationId: NotifyCallRgQueueTier
          description: >-
            This event is triggered when a call waiting in a ring group with
            call queue enabled enters a tier which results in calls being sent
            to a user in that tier.
          parameters:
            - $ref: '#/components/parameters/webhook-signature'
            - $ref: '#/components/parameters/webhook-timestamp'
          requestBody:
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/call-rg-queue-tier-event'
          responses:
            default:
              description: >-
                The response of the webhook endpoint is discarded, webhook
                requests are never retried.
          summary: Notify call rg queue tier
          x-n2p-accountBackendTypes:
            - unite
    call-ringing:
      '{$request.body#/endpoint_url}':
        post:
          operationId: NotifyCallRinging
          description: >-
            This event is triggered when a call is ringing. This event will
            trigger for both inbound and outbound calls and is typically
            followed by by a `call_answered` or `call_missed` event.
          parameters:
            - $ref: '#/components/parameters/webhook-signature'
            - $ref: '#/components/parameters/webhook-timestamp'
          requestBody:
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/call-ringing-event'
          responses:
            default:
              description: >-
                The response of the webhook endpoint is discarded, webhook
                requests are never retried.
          summary: Notify call ringing
          x-n2p-accountBackendTypes:
            - unite
    call-unpark:
      '{$request.body#/endpoint_url}':
        post:
          operationId: NotifyCallUnpark
          description: >-
            This event is triggered when a user retrieves a call from a parking
            slot.
          parameters:
            - $ref: '#/components/parameters/webhook-signature'
            - $ref: '#/components/parameters/webhook-timestamp'
          requestBody:
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/call-unpark-event'
          responses:
            default:
              description: >-
                The response of the webhook endpoint is discarded, webhook
                requests are never retried.
          summary: Notify call unpark
          x-n2p-accountBackendTypes:
            - unite
    emergency-call:
      '{$request.body#/endpoint_url}':
        post:
          operationId: NotifyEmergencyCall
          description: >-
            This event is triggered when a call is placed to an emergency
            service.
          parameters:
            - $ref: '#/components/parameters/webhook-signature'
            - $ref: '#/components/parameters/webhook-timestamp'
          requestBody:
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/emergency-call-event'
          responses:
            default:
              description: >-
                The response of the webhook endpoint is discarded, webhook
                requests are never retried.
          summary: Notify emergency call
          x-n2p-accountBackendTypes:
            - unite
    message-received:
      '{$request.body#/endpoint_url}':
        post:
          operationId: NotifyMessageReceived
          description: >-
            This event is triggered when a Team Member, Department or Account
            receives a message. Currently only works for messages coming from
            external phone numbers which are not bound to the net2phone account.
          parameters:
            - $ref: '#/components/parameters/webhook-signature'
            - $ref: '#/components/parameters/webhook-timestamp'
          requestBody:
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/message-received-event'
                examples:
                  MmsToUser:
                    $ref: '#/components/examples/mms-to-user'
                  SmsToDepartment:
                    $ref: '#/components/examples/sms-to-department'
          responses:
            default:
              description: >-
                The response of the webhook endpoint is discarded, webhook
                requests are never retried.
          summary: Notify message received
          x-n2p-accountBackendTypes:
            - unite
    voicemail-missed:
      '{$request.body#/endpoint_url}':
        post:
          operationId: NotifyVoicemailMissed
          description: >-
            This event is triggered when an incoming call is sent to a user's
            voicemail but the caller doesn't leave a voicemail. A common
            scenario for this would be the case where the callers hangs up
            before leaving a voicemail (before the beep sound).
          parameters:
            - $ref: '#/components/parameters/webhook-signature'
            - $ref: '#/components/parameters/webhook-timestamp'
          requestBody:
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/voicemail-missed-event'
          responses:
            default:
              description: >-
                The response of the webhook endpoint is discarded, webhook
                requests are never retried.
          summary: Notify voicemail missed
          x-n2p-accountBackendTypes:
            - unite
    voicemail-notify:
      '{$request.body#/endpoint_url}':
        post:
          operationId: NotifyVoicemailNotify
          description: >-
            This event is triggered when a user reaches the voice mail service
            (by dialing *95) to listen/manage their unread voice mails.
          parameters:
            - $ref: '#/components/parameters/webhook-signature'
            - $ref: '#/components/parameters/webhook-timestamp'
          requestBody:
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/voicemail-notify-event'
          responses:
            default:
              description: >-
                The response of the webhook endpoint is discarded, webhook
                requests are never retried.
          summary: Notify voicemail notify
          x-n2p-accountBackendTypes:
            - unite
    voicemail-received:
      '{$request.body#/endpoint_url}':
        post:
          operationId: NotifyVoicemailReceived
          description: >-
            This event is triggered when an incoming call is not answered by a
            user who has enabled voice mail recording, and the caller
            successfully records a voice mail.
          parameters:
            - $ref: '#/components/parameters/webhook-signature'
            - $ref: '#/components/parameters/webhook-timestamp'
          requestBody:
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/voicemail-received-event'
          responses:
            default:
              description: >-
                The response of the webhook endpoint is discarded, webhook
                requests are never retried.
          summary: Notify voicemail received
          x-n2p-accountBackendTypes:
            - unite
